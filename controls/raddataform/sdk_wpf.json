[{"Name":"CustomKeyboardCommandProvider","ExampleInfo":{"Name":"CustomKeyboardCommandProvider","DirectoryName":"CustomKeyboardCommandProvider","ExampleFileNames":["CustomKeyboardCommandProvider_WPF.csproj","App.xaml","App.xaml.cs","Employee.cs","KeyboardCommandProvider.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/DataForm/CustomKeyboardCommandProvider/","Description":" Custom Keyboard Command Provider\r\nRadDataForm provides an easy MVVM-friendly approach for customization of its default commands' logic. This example demonstrates how to extend the way RadDataForm handles a particular key.","KeyWords":"CustomKeyboardCommandProvider"},
{"Name":"DataTemplateSelector","ExampleInfo":{"Name":"DataTemplateSelector","DirectoryName":"DataTemplateSelector","ExampleFileNames":["DataTemplateSelector_WPF.csproj","App.xaml","App.xaml.cs","Employee.cs","EmployeesEditTemplateSelector.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/DataForm/DataTemplateSelector/","Description":" Data Template Selector\nThis example demonstrates how to conditionally load different ReadOnly/Edit DataTemplates, according to RadDataForm's CurrentItem.","KeyWords":"DataTemplateSelector"},
{"Name":"DefiningCustomDataFields","ExampleInfo":{"Name":"DefiningCustomDataFields","DirectoryName":"DefiningCustomDataFields","ExampleFileNames":["DefiningCustomDataFields_WPF.csproj","App.xaml","App.xaml.cs","DataFormNumericUpDownField.cs","Employee.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/DataForm/DefiningCustomDataFields/","Description":" Defining Custom DataFields\r\nThe sample demonstrates how to define your own DataField type.","KeyWords":"DefiningCustomDataFields"},
{"Name":"IntegrateWithRadGridView","ExampleInfo":{"Name":"IntegrateWithRadGridView","DirectoryName":"IntegrateWithRadGridView","ExampleFileNames":["IntegrateWithRadGridView_WPF.csproj","App.xaml","App.xaml.cs","Employee.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/DataForm/IntegrateWithRadGridView/","Description":" Integrate With RadGridView\r\nThe sample demonstrates how you can integrate RadDataForm with RadGridView.","KeyWords":"IntegrateWithRadGridView"},
{"Name":"ValidationSummaryOutsideDataForm","ExampleInfo":{"Name":"ValidationSummaryOutsideDataForm","DirectoryName":"ValidationSummaryOutsideDataForm","ExampleFileNames":["ValidationSummaryOutsideDataForm_WPF.csproj","App.xaml","App.xaml.cs","Club.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/DataForm/ValidationSummaryOutsideDataForm/","Description":"DataFormValidationSummary Integration\r\nThis example demonstrates how to integrate the DataFormValidationSummary control with RadGridView.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/raddataform/validation/use-validationsummary-outside-raddataform.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/raddataform/validation/use-validationsummary-outside-raddataform.html\r\n\r\n[//]:","KeyWords":"ValidationSummaryOutsideDataForm,  dataformvalidationsummary"}]