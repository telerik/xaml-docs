[{"Name":"Tool Bar Custom Styled Elements","ExampleInfo":{"Name":"Tool Bar Custom Styled Elements","DirectoryName":"ToolBarCustomStyledElements","ExampleFileNames":["ToolBarCustomStyledElements_WPF.csproj","App.config","App.xaml","App.xaml.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ToolBar/ToolBarCustomStyledElements/","Description":"The ToolBarCustomStyledElements project demonstrates the correct approach for setting a custom style on element placed in RadToolbar.\r\nThe toolbar has predefined styles for radbutton, textblock, raddropdownbutton, etc. In order to edit and use successfully these styles / or to use custom styles for the elements in the toolbar you have to override the ToolBarContainerStyleSelector of the RadToolbar. Add a ContainerStyle targetting the specific control, add its predefined style and add/edit/override the properties you need.\r\nSetting directy style on the elements in the toolbar is not correct, does not work in WPF and works partially in Silverlight.","KeyWords":"Tool Bar Custom Styled Elements,  itemcontainerstyleselector, toolbarcontainerstyleselector"},
{"Name":"Tool Bar Drag And Drop","ExampleInfo":{"Name":"Tool Bar Drag And Drop","DirectoryName":"ToolBarDragAndDrop","ExampleFileNames":["ToolBarDragAndDrop.csproj","App.config","App.xaml","App.xaml.cs","BandsUtilities.cs","DragDropInfo.cs","MainWindow.xaml","MainWindow.xaml.cs","NewBandMode.cs","Readme.md","ToolBarTrayUtilities.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ToolBar/ToolBarDragAndDrop/","Description":"The ToolBarDragAndDrop SDK demo shows integration between DragDropManager and RadToolBar / RadToolBarTray.\r\nIn this demo you are able to:\r\n\r\n   - Reorder ToolBars in the same band (row) in ToolBarTray with Drag and Drop.\r\n   - Move ToolBars in other bands within the same ToolbarTray with Drag and Drop.\r\n   - Create new Bands (rows) in the current tray or other tray with Drag and Drop.\r\n   - Drop a toolbar outside tray so that it can be dragged with Window around it (this is available only in the WPF demo).","KeyWords":"Tool Bar Drag And Drop,  radtoolbartray, toolbardraganddrop, dragdropmanager"},
{"Name":"ToolBar MVVM","ExampleInfo":{"Name":"ToolBar MVVM","DirectoryName":"ToolBarMVVM","ExampleFileNames":["ToolBarMVVM.csproj","App.config","App.xaml","App.xaml.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md","Resources.xaml","ViewModels\\ButtonViewModel.cs","ViewModels\\ColorPickerViewModel.cs","ViewModels\\MainViewModel.cs","ViewModels\\SeparatorViewModel.cs","ViewModels\\TextBlockViewModel.cs","ViewModels\\ToolBarItemTemplateSelector.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ToolBar/ToolBarMVVM/","Description":"The ToolBar MVVM sample demonstrates the following features and custommization techniques in the RadToolBar:\r\n\t\r\n\t1) DataBinding the RadToolBar to collection of ViewModels.\r\n\t2) DataTemplaceSelector which decides what type of control to add in the toolbar depending on the ViewModel's type.\r\n\t3) Custom Styles that upgrade the predefined styles in the RadToolBar.\r\n\t\r\nNotes: The predefined styles are located in Resources.xaml. \r\n\t   The custom styles are located in Example.xamla and are based on the predefined ones.\r\n\t   The ColorPicker uses the predefined RadSplitButtonStyle to achieve consistency when used in Toolbar. \r\n\t   Otherwise it will have borders, non-transparent background etc. because Toolbar does not have predefined style for RadColorPicker.","KeyWords":"ToolBar MVVM,  databinding, radcolorpicker, itemtemplateselector, datatemplateselector"},
{"Name":"Tool Bar Right Aligned Items","ExampleInfo":{"Name":"Tool Bar Right Aligned Items","DirectoryName":"ToolBarRightAlignedItems","ExampleFileNames":["ToolbarRightAlignedItems.csproj","App.config","App.xaml","App.xaml.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ToolBar/ToolBarRightAlignedItems/","Description":"The RightAlignedItems examples demontrates the use of the RadToolBar.ItemAlignment property.\r\nWith it, you are able to position the items in the toolbar on right in horizontal toolbars and on bottom in vertical toolbars.\r\nPlease also note the use of the RadToolBar.OverflowMode property which controls whether and how the item should go into overflow area.","KeyWords":"Tool Bar Right Aligned Items,  overflowmode, itemalignment, orientation, verticalalignment"}]