[{"Name":"Custom Drag Visual Style","ExampleInfo":{"Name":"Custom Drag Visual Style","DirectoryName":"CustomDragVisualStyle","ExampleFileNames":["CustomDragVisualStyle_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Country.cs","Example.xaml","Example.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","ViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/CustomDragVisualStyle/","Description":"This example demonstrates how to create a custom DragVisualProvider in order to change its Foreground, Background, BorderBrush and Template for\r\nSilverlight and WPF.","KeyWords":"Custom Drag Visual Style,  Reorder, Drop, Customize, DragVisualProvider"},
{"Name":"Custom Drop Cue With Wrap Panel","ExampleInfo":{"Name":"Custom Drop Cue With Wrap Panel","DirectoryName":"CustomDropCueWithWrapPanel","ExampleFileNames":["CustomDropCueWithWrapPanel_SL.csproj","App_SL.xaml","App_SL.xaml.cs","CustomLinearDropVisualProvider.cs","Item.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","ViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/CustomDropCueWithWrapPanel/","Description":"This example demonstrates how to customize the LinearDropVisualProvider of RadListBox. In the example you can notice that when dragging an item in the ListBox the DropVisual is different.","KeyWords":"Custom Drop Cue With Wrap Panel,  LinearDropVisualProvider, Drag, DropVisual"},
{"Name":"Custom List Box Drag Drop Behavior","ExampleInfo":{"Name":"Custom List Box Drag Drop Behavior","DirectoryName":"CustomListBoxDragDropBehavior","ExampleFileNames":["CustomListBoxDragDropBehavior_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Customer.cs","CustomerViewModel.cs","MainPage.xaml","MainPage.xaml.cs","MyListBoxDragDropBehavior.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/CustomListBoxDragDropBehavior/","Description":"\nThis example demonstrates how to customize ListBoxDragDropBehavior of RadListBox. In the example the right ListBox control has the custom MyListBoxDragDropBehavior and when items are dragged/dropped from/in it an Alert massage is shown with the items details.","KeyWords":"Custom List Box Drag Drop Behavior"},
{"Name":"Differently Colored Unfocused SelectedItems","ExampleInfo":{"Name":"Differently Colored Unfocused SelectedItems","DirectoryName":"DifferentlyColoredUnfocusedSelectedItems","ExampleFileNames":["DifferentlyColoredUnfocusedSelectedItems_SL.csproj","App_SL.xaml","App_SL.xaml.cs","BoolToColorConverter.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","ViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/DifferentlyColoredUnfocusedSelectedItems/","Description":"\r\nThis sample project demonstates how to change the background color of RadListBoxItems when RadListBox loses the focus.","KeyWords":"Differently Colored Unfocused SelectedItems"},
{"Name":"Data conversion between two RadListBox controls","ExampleInfo":{"Name":"Data conversion between two RadListBox controls","DirectoryName":"DragDropDataConversion","ExampleFileNames":["DragDropDataConversion_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Customer.cs","CustomerToProjectConverter.cs","Example.xaml","Example.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Project.cs","ProjectToCustomerConverter.cs","Readme.md","ViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/DragDropDataConversion/","Description":"\r\nThis example demonstrates how to convert data when using drag and drop between two RadListBox controls. The left RadListBox control is bound to a collection of Customer object and the right one is bound to a collection of Project objects. The conversion is handled by two custom DataConverters.","KeyWords":"Data conversion between two RadListBox controls"},
{"Name":"Drag and drop with ScheduleView","ExampleInfo":{"Name":"Drag and drop with ScheduleView","DirectoryName":"DragDropWithScheduleView","ExampleFileNames":["DragDropWithScheduleView_SL.csproj","AppointmentToCustomerConverter.cs","App_SL.xaml","App_SL.xaml.cs","Customer.cs","CustomScheduleViewDragDropBehavior.cs","Example.xaml","Example.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","ViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/DragDropWithScheduleView/","Description":"This example demonstrates how to achieve drag and drop functionality between RadListBox and RadScheduleView by creating AppointmentToCustomerConverter and CustomScheduleViewDragDropBehavior\r\nfor Silverlight and WPF.","KeyWords":"Drag and drop with ScheduleView,  Custom, RadScheduleView, DragDropBehavior, Behavior"},
{"Name":"Modified ListBoxDragVisualStyle","ExampleInfo":{"Name":"Modified ListBoxDragVisualStyle","DirectoryName":"ModifyListBoxDragVisualStyle","ExampleFileNames":["ModifyListBoxDragVisualStyle_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Country.cs","Example.xaml","Example.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","ViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/ModifyListBoxDragVisualStyle/","Description":"This example demonstrates how to create a modified ListBoxDragVisualStyle in order to remove the before and after specifiers for Silverlight and WPF.","KeyWords":"Modified ListBoxDragVisualStyle,  Custom, DragDrop"},
{"Name":"Create attached property for SelectedItems","ExampleInfo":{"Name":"Create attached property for SelectedItems","DirectoryName":"SelectedItems","ExampleFileNames":["SelectedItems_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Country.cs","Example.xaml","Example.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md","SelectedItemsHelper.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/SelectedItems/","Description":"IMPORTANT:\r\n\r\nWith the release of Telerik UI for WPF Q1 2015 there is a new functionality for achieving MVVM scenarios where the SelectedItems of the RadListBox should be bound to a collection from the view model. More details can be found in our online documentation: \r\n- For WPF here: http://docs.telerik.com/devtools/wpf/controls/radlistbox/features/selecteditemssource\r\n- For Silverlight here: http://docs.telerik.com/devtools/silverlight/controls/radlistbox/features/selecteditemssource\r\n\r\nThis example demonstrates how to create an attached property that could be used in order to bind a collection of objects to the control \r\nand use it as a collection of selected items for Silverlight and WPF.","KeyWords":"Create attached property for SelectedItems,  MVVM"},
{"Name":"How to bind SelectedItems in MVVM","ExampleInfo":{"Name":"How to bind SelectedItems in MVVM","DirectoryName":"SelectedItemsSource","ExampleFileNames":["SelectedItemsSource_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Example.xaml","Example.xaml.cs","Item.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","ViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/SelectedItemsSource/","Description":"This example demonstrates how to use the built-in ListBoxSelectedItemsBehavior of the RadListBox control in order to bind a collection of objects which will be two way synced with the control's SelectedItems collection.","KeyWords":"How to bind SelectedItems in MVVM,  ListBoxSelectedItemsBehavior"},
{"Name":"Shuttle Control","ExampleInfo":{"Name":"Shuttle Control","DirectoryName":"ShuttleControl","ExampleFileNames":["ShuttleControl_SL.csproj","Agency.cs","App_SL.xaml","App_SL.xaml.cs","Example.xaml","Example.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","ViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/ShuttleControl/","Description":"This example demonstrates how you can combine two RadListBox controls to implement a shuttle control. You can easily move/remove one or multiple select items from one to the other ListBox.","KeyWords":"Shuttle Control,  shuttlecontrol, databinding, mvvm"}]