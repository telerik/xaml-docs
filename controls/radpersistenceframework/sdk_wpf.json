[{"Name":"GridView serialization","ExampleInfo":{"Name":"GridView serialization","DirectoryName":"GridViewSerialization","ExampleFileNames":["GridViewSerialization_WPF.csproj","App.config","App.xaml","App.xaml.cs","GridViewCustomPropertyProvider.cs","MainWindow.xaml","MainWindow.xaml.cs","Proxies.cs","DataSources\\Customer.cs","DataSources\\Customers.xml","DataSources\\ExamplesDB.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/PersistenceFramework/GridViewSerialization/","Description":"This example demonstrates custom serialization of properties for the RadGridView control.\r\nSorting and Grouping, width and position of the columns will be serialized.","KeyWords":"GridView serialization,  icustompropertyprovider, radgridview, persistencemanager"},
{"Name":"Native Controls","ExampleInfo":{"Name":"Native Controls","DirectoryName":"NativeControls","ExampleFileNames":["NativeControls_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainViewModel.cs","MainWindow.xaml","MainWindow.xaml.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/PersistenceFramework/NativeControls/","Description":"This example demonstrates persisting and restoring properties of the intrinsic Silverlight or WPF controls.","KeyWords":"Native Controls,  properties"},
{"Name":"Zip Integration","ExampleInfo":{"Name":"Zip Integration","DirectoryName":"ZipIntegration","ExampleFileNames":["ZipIntegration_WPF.csproj","App.config","App.xaml","App.xaml.cs","ImageValueProvider_WPF.cs","MainWindow.xaml","MainWindow.xaml.cs","ZipViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/PersistenceFramework/ZipIntegration/","Description":"This example demonstrates the integration between the Persistence framework and the Zip library for providing an output stream object with compressed size.","KeyWords":"Zip Integration,  itypedescriptorcontext, mvvm, databinding"}]