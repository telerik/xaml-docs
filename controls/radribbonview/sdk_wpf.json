[{"Name":"Contextual Groups - Data Binding","ExampleInfo":{"Name":"Contextual Groups - Data Binding","ProjectPath":"C:\\SDK-details-repository\\RibbonView\\ContextualGroups-DataBinding\\ContextualGroups-DataBinding_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\RibbonView\\ContextualGroups-DataBinding\\Readme.md","DirectoryName":"ContextualGroups-DataBinding","ExampleFileNames":["ContextualGroups-DataBinding_WPF.csproj","App.config","App.xaml","App.xaml.cs","ContextualGroupViewModel.cs","MainViewModel.cs","MainWindow.xaml","MainWindow.xaml.cs","TabViewModel.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/RibbonView/ContextualGroups-DataBinding/","Description":"\r\nThe sample demonstrates how to use the RadRibbonView with data-bound ContextualGroups.\r\n\r\nSILVERLIGHT NOTE\r\nPlease note that due to limitations in SL we need to set the ContextualTabsStyle property of the RadRibbonView. That style template is different than the default one for the RadRibbonTabs, that is why we need to change its template if we use xaml binaries. However if we use NoXAML binaries you can BasedOn the style to the \"ContextualTabsStyle\". ","KeyWords":"Contextual Groups - Data Binding"},
{"Name":"Help Functionality","ExampleInfo":{"Name":"Help Functionality","ProjectPath":"C:\\SDK-details-repository\\RibbonView\\HelpFunctionality\\HelpFunctionality_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\RibbonView\\HelpFunctionality\\readme.md","DirectoryName":"HelpFunctionality","ExampleFileNames":["HelpFunctionality_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","MyHelpWindow.xaml","MyHelpWindow.xaml.cs","RibbonViewContainer.xaml","RibbonViewContainer.xaml.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/RibbonView/HelpFunctionality/","Description":"\nThis example demonstrates an implementation where an popup window with help content is opened when the F1 key is pressed.\r\n","KeyWords":"Help Functionality"},
{"Name":"Multiple Access Keys - Key Tips","ExampleInfo":{"Name":"Multiple Access Keys - Key Tips","ProjectPath":"C:\\SDK-details-repository\\RibbonView\\MultipleAccessKeys-KeyTips\\MultipleAccessKeys-KeyTips_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\RibbonView\\MultipleAccessKeys-KeyTips\\Readme.md","DirectoryName":"MultipleAccessKeys-KeyTips","ExampleFileNames":["MultipleAccessKeys-KeyTips_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/RibbonView/MultipleAccessKeys-KeyTips/","Description":"\nThe sample demonstrates how to set multiple AccessKeys for the KeyTips of the RadRibbonView by setting attached property of the KeyTipService AccessKeys.","KeyWords":"Multiple Access Keys - Key Tips"},
{"Name":"Office2016 Inspired RibbonView","ExampleInfo":{"Name":"Office2016 Inspired RibbonView","ProjectPath":"C:\\SDK-details-repository\\RibbonView\\Office2016InspiredRibbonView_WPF\\Office2016InspiredRibbonView_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\RibbonView\\Office2016InspiredRibbonView_WPF\\readme.md","DirectoryName":"Office2016InspiredRibbonView_WPF","ExampleFileNames":["Office2016InspiredRibbonView_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Appearance\\AppearanceChangedEventArgs.cs","Appearance\\AppearanceCommandParameter.cs","Appearance\\AppearanceManager.cs","Appearance\\ColorToSolidColorBrushConverter.cs","Appearance\\Office2016ColorVariations.cs","Appearance\\Office2016Palette.cs","Appearance\\Office2016RsourceExtension.cs","Appearance\\Resources.cs","Styles\\ApplicationStyles.xaml","Styles\\BackstageStyles.xaml","Styles\\QuickAccessToolbarStyles.xaml","Styles\\RibbonButtonsStyles.xaml","Styles\\RibbonViewStyles.xaml","Styles\\RibbonWindowStyles.xaml","ViewModel\\MainViewModel.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/RibbonView/Office2016InspiredRibbonView_WPF/","Description":"\r\nThis example demonstrates an Office2016 Inspired RibbonView and RibbonWindow based on our VisualStudio2013 theme.\r\n","KeyWords":"Office2016 Inspired RibbonView"}]