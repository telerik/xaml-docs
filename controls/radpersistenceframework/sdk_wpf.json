[{"Name":"GridView serialization","ExampleInfo":{"Name":"GridView serialization","ProjectPath":"C:\\SDK-details-repository\\PersistenceFramework\\GridViewSerialization\\GridViewSerialization_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\PersistenceFramework\\GridViewSerialization\\readme.md","DirectoryName":"GridViewSerialization","ExampleFileNames":["GridViewSerialization_WPF.csproj","App.config","App.xaml","App.xaml.cs","GridViewCustomPropertyProvider.cs","MainWindow.xaml","MainWindow.xaml.cs","Proxies.cs","DataSources\\Customer.cs","DataSources\\Customers.xml","DataSources\\ExamplesDB.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/PersistenceFramework/GridViewSerialization/","Description":"\r\nThis example demonstrates custom serialization of properties for the RadGridView control.\r\nSorting and Grouping, width and position of the columns will be serialized.","KeyWords":"GridView serialization"},
{"Name":"Native Controls","ExampleInfo":{"Name":"Native Controls","ProjectPath":"C:\\SDK-details-repository\\PersistenceFramework\\NativeControls\\NativeControls_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\PersistenceFramework\\NativeControls\\readme.md","DirectoryName":"NativeControls","ExampleFileNames":["NativeControls_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainViewModel.cs","MainWindow.xaml","MainWindow.xaml.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/PersistenceFramework/NativeControls/","Description":"\nThis example demonstrates persisting and restoring properties of the intrinsic Silverlight or WPF controls.","KeyWords":"Native Controls"},
{"Name":"Zip Integration","ExampleInfo":{"Name":"Zip Integration","ProjectPath":"C:\\SDK-details-repository\\PersistenceFramework\\ZipIntegration\\ZipIntegration_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\PersistenceFramework\\ZipIntegration\\readme.md","DirectoryName":"ZipIntegration","ExampleFileNames":["ZipIntegration_WPF.csproj","App.config","App.xaml","App.xaml.cs","ImageValueProvider_WPF.cs","MainWindow.xaml","MainWindow.xaml.cs","ZipViewModel.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/PersistenceFramework/ZipIntegration/","Description":"\nThis example demonstrates the integration between the Persistence framework and the Zip library for providing an output stream object with compressed size.","KeyWords":"Zip Integration"}]