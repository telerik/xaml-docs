[{"Name":"Click Modes Custom Behavior","ExampleInfo":{"Name":"Click Modes Custom Behavior","DirectoryName":"ClickModesCustomBehavior","ExampleFileNames":["ClickModesCustomBehavior.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/ClickModesCustomBehavior/ClickModesCustomBehavior/","Description":"RadMap supports both single and double mouse clicks. You can configure the behavior of the control in this respect using the MouseClickMode and MouseDoubleClickMode properties. These properties support the following predefined values: Center, None, ZoomPointToCenter, ZoomToPoint.\r\nIn order to execute custom logic on click or double click, set these properties to None and handle the MapMouseClick and MapMouseDoubleClick events of RadMap.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Click Modes Custom Behavior, Mouse, DoubleClick"},
{"Name":"Click Modes Predefined Values","ExampleInfo":{"Name":"Click Modes Predefined Values","DirectoryName":"ClickModesPredefinedValues","ExampleFileNames":["ClickModesPredefinedValues.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/ClickModesPredefinedValues/ClickModesPredefinedValues/","Description":"RadMap supports both single and double mouse clicks. You can configure the behavior of the control in this respect using the MouseClickMode and MouseDoubleClickMode properties. These properties support the following predefined values: Center, None, ZoomPointToCenter, ZoomToPoint.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Click Modes Predefined Values, Mouse, DoubleClick, Center, ZoomToPoint"},
{"Name":"Default Layout Disabled","ExampleInfo":{"Name":"Default Layout Disabled","DirectoryName":"DefaultLayoutDisabled","ExampleFileNames":["DefaultLayoutDisabled.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/DefaultLayoutDisabled/DefaultLayoutDisabled/","Description":"The default layout of RadMap is represented by the UI controls that appear in it. In case you want to hide all of these controls and create your custom layout, you can set the UseDefaultLayout property of RadMap to false.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Default Layout Disabled, UseDefaultLayout"},
{"Name":"Distance And Scale Distance Unit","ExampleInfo":{"Name":"Distance And Scale Distance Unit","DirectoryName":"DistanceAndScaleDistanceUnit","ExampleFileNames":["DistanceAndScaleDistanceUnit.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/DistanceAndScaleDistanceUnit/DistanceAndScaleDistanceUnit/","Description":"RadMap uses two measure units for distance - mile and kilometer. The measure units determine the placement of the MapShapes, as their width and height are measured in the selected unit. You can specify the unit using the DistanceUnit property of RadMap. The default value is Kilometer.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Distance And Scale Distance Unit, Mile, Kilometer"},
{"Name":"Distance And Scale External Map Scale","ExampleInfo":{"Name":"Distance And Scale External Map Scale","DirectoryName":"DistanceAndScaleExternalMapScale","ExampleFileNames":["DistanceAndScaleExternalMapScale.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/DistanceAndScaleExternalMapScale/DistanceAndScaleExternalMapScale/","Description":"You can use the MapScale control outside the RadMap control. In order to associate the external MapScale control and the RadMap instance, set the MapControl property of MapScale to the respective RadMap instance.\r\nYou can configure the RadMap control not to show its default MapScale control using its ScaleVisibility property or the UseDefaultLayout property that disables the default layout of RadMap.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Distance And Scale External Map Scale, ScaleVisibility, DistanceUnit"},
{"Name":"Distance And Scale Scale Visibility","ExampleInfo":{"Name":"Distance And Scale Scale Visibility","DirectoryName":"DistanceAndScaleScaleVisibility","ExampleFileNames":["DistanceAndScaleScaleVisibility.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/DistanceAndScaleScaleVisibility/DistanceAndScaleScaleVisibility/","Description":"You can change the Visibility of the MapScale control in the default layout of RadMap using the ScaleVisibility property.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Distance And Scale Scale Visibility, MapScale, DistanceUnit"},
{"Name":"Dynamic Layer","ExampleInfo":{"Name":"Dynamic Layer","DirectoryName":"DynamicLayer","ExampleFileNames":["DynamicLayer.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MapDynamicSource.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/DynamicLayer/DynamicLayer/","Description":"The DynamicLayer allows you to display additional data on top of the displayed map. In contrast to InformationLayer which processes all items in a collection, the DynamicLayer requests items to process. It makes favour when thousands of items are available (pictures of POIs, for example). Your application can select what pictures are suitable for given location and zoom factor and return only these ones.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Dynamic Layer, ZoomGridList, LatitudesCount, LongitudesCount, IMapDynamicSource, ItemsRequest"},
{"Name":"External Map Mouse Location Indicator","ExampleInfo":{"Name":"External Map Mouse Location Indicator","DirectoryName":"ExternalMapMouseLocationIndicator","ExampleFileNames":["ExternalMapMouseLocationIndicator.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/ExternalMapMouseLocationIndicator/ExternalMapMouseLocationIndicator/","Description":"You can use the MapMouseLocationIndicator control outside the RadMap control. In order to associate the external MapMouseLocationIndicator control and the RadMap instance, set the MapControl property of MapMouseLocationIndicator to the respective RadMap instance.\r\nYou can configure the RadMap control not to show its default MapMouseLocationIndicator control using its MouseLocationIndicatorVisibility property or the UseDefaultLayout property that disables the default layout of RadMap.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"External Map Mouse Location Indicator, MouseLocationIndicatorVisibility"},
{"Name":"Geocode","ExampleInfo":{"Name":"Geocode","DirectoryName":"Geocode","ExampleFileNames":["Geocode.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/Geocode/Geocode/","Description":"The RadMap provides unified geocoding architecture, incorporated in the BingRestMapProvider SearchLocation API.\nThis allows you to easily convert a location point to an address and the opposite - address to a location point.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Geocode,  GeocodeProvider, ReverseGeocodeRequest, Location, Address, Service, BingRestMapProvider"},
{"Name":"How To Bring A Location Into View","ExampleInfo":{"Name":"How To Bring A Location Into View","DirectoryName":"HowToBringALocationIntoView","ExampleFileNames":["HowToBringALocationIntoView.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/HowToBringALocationIntoView/HowToBringALocationIntoView/","Description":"In order to bring a location point into view, you have to set the Center property of the RadMap property.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"How To Bring A Location Into View, BringLocationIntoView"},
{"Name":"Custom commands for Map command bar","ExampleInfo":{"Name":"Custom commands for Map command bar","DirectoryName":"HowToCustomCommandsForMapCommandBar","ExampleFileNames":["HowToCustomCommandsForMapCommandBar.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/HowToCustomCommandsForMapCommandBar/HowToCustomCommandsForMapCommandBar/","Description":"It is now possible to customize the default set of commands in the MapCommandBar UI for every map provider. Every custom command should be described by a CommandDescription instance that you need to add to the respective MapProvider.Commands collection (if your custom command is RoutedCommand / RoutedUICommand, you can add the associated CommandBinding to the MapProvider.CommandBindingCollection).\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Custom commands for Map command bar, MapProvider, CommandDescription, CommandBinding"},
{"Name":"Custom Zoom Levels For Map Zoom Bar","ExampleInfo":{"Name":"Custom Zoom Levels For Map Zoom Bar","DirectoryName":"HowToCustomZoomLevelsForMapZoomBar","ExampleFileNames":["HowToCustomZoomLevelsForMapZoomBar.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/HowToCustomZoomLevelsForMapZoomBar/HowToCustomZoomLevelsForMapZoomBar/","Description":"You can customize the default preset zoom levels in the MapZoomBar UI for every map provider. You can add custom zoom level through the MapZoomBar.RegisterSetZoomLevelCommand(zoomLevel, commandText, dataTemplate, imageUri) method.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Custom Zoom Levels For Map Zoom Bar, ZoomLevelCommand, CustomZoomAction"},
{"Name":"How To Display Info From Custom Shapefile","ExampleInfo":{"Name":"How To Display Info From Custom Shapefile","DirectoryName":"HowToDisplayInfoFromCustomShapefile","ExampleFileNames":["HowToDisplayInfoFromCustomShapefile.csproj","App.xaml","App.xaml.cs","ExampleViewModel.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","TicketPriceInfo.cs","Resources\\field_pol.shp","Resources\\grass_pol.shp","Resources\\playground_lin.shp","Resources\\stadium_pol.dbf","Resources\\stadium_pol.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/HowToDisplayInfoFromCustomShapefile/HowToDisplayInfoFromCustomShapefile/","Description":"The ESRI Shapefiles or simply the shapefiles are popular format for storing geographical data. The files spatially describe geometries like lines, polylines and polygons. These geometries may represent different geographical objects such as countries, roads, rivers, lakes etc. Via a software that supports the format, the geometries can be translated properly on a map.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"How To Display Info From Custom Shapefile, InformationLayer, MapShapeReader, ReadCompleted"},
{"Name":"How To Implement Custom Map Provider","ExampleInfo":{"Name":"How To Implement Custom Map Provider","DirectoryName":"HowToImplementCustomMapProvider","ExampleFileNames":["HowToImplementCustomMapProvider.csproj","App.xaml","App.xaml.cs","CustomTiledMapProvider.cs","CustomTiledMapSource.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/HowToImplementCustomMapProvider/HowToImplementCustomMapProvider/","Description":"You can create a custom map provider and use it with RadMap. In order to do this, you should implement a custom provider and custom map source that inherit TiledProvider or ImageProvider and TiledMapSource or ImageMapSource.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"How To Implement Custom Map Provider, CustomTiledMapProvider, TiledProvider, TiledMapSource"},
{"Name":"How to put a mark on the clicked location","ExampleInfo":{"Name":"How to put a mark on the clicked location","DirectoryName":"HowToPutAMarkOnTheClickedLocation","ExampleFileNames":["HowToPutAMarkOnTheClickedLocation.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/HowToPutAMarkOnTheClickedLocation/HowToPutAMarkOnTheClickedLocation/","Description":"If you want to mark the position where the user has clicked, you have to handle the MapMouseClick event and add the desired mark element to the InformationLayer of the RadMap on the clicked location.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"How to put a mark on the clicked location, InformationLayer, HotSpot, Mark, MapMouseClick"},
{"Name":"How To Resize Map Shapes With Mouse Dragging","ExampleInfo":{"Name":"How To Resize Map Shapes With Mouse Dragging","DirectoryName":"HowToResizeMapShapesWithMouseDragging","ExampleFileNames":["HowToResizeMapShapesWithMouseDragging.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/HowToResizeMapShapesWithMouseDragging/HowToResizeMapShapesWithMouseDragging/","Description":"RadMap provides a rich set of geocoordinate-enabled shapes that can be defined and displayed onto the map surface .There are scenarios, however, where you would like to do more than just position a shape onto the map. This example will demonstrate how to manipulate each individual segment of line/polyline/polygon shape based on mouse input from the user. For example we will select (highlight) a point, and drag the selected object to another location on the map – modifying in this way the shape or the line segment.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"How To Resize Map Shapes With Mouse Dragging, InformationLayer, MapPolyline, MapPinPoint"},
{"Name":"How To Restrict Panning And Zooming Region","ExampleInfo":{"Name":"How To Restrict Panning And Zooming Region","DirectoryName":"HowToRestrictPanningAndZoomingRegion","ExampleFileNames":["HowToRestrictPanningAndZoomingRegion.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/HowToRestrictPanningAndZoomingRegion/HowToRestrictPanningAndZoomingRegion/","Description":"You can restrict the zooming and panning region in RadMap by setting the RadMap.MinZoomLevel / RadMap.MaxZoomLevel properties and the RadMap.GeoBounds property.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"How To Restrict Panning And Zooming Region, MinZoomLevel, MaxZoomLevel, GeoBounds"},
{"Name":"How To Select Map Shapes","ExampleInfo":{"Name":"How To Select Map Shapes","DirectoryName":"HowToSelectMapShapes","ExampleFileNames":["HowToSelectMapShapes.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/HowToSelectMapShapes/HowToSelectMapShapes/","Description":"RadMap provides a rich set of geocoordinate-enabled shapes that can be defined and displayed onto the map surface. There are scenarios, however, where you would like to do more than just position a shape onto the map. This example will demonstrate how to manipulate each individual segment of line/polyline/polygon shape based on mouse input from the user. For example we will select (highlight) a Line segment of the Polyline and set a green color for it. The Polyline itself will be colored blue and on click it will become red. All these customizations will be made through styles.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"How To Select Map Shapes, InformationLayer, MapLine, MapPolyline, Selection"},
{"Name":"How To Set The Best View For Information Layer","ExampleInfo":{"Name":"How To Set The Best View For Information Layer","DirectoryName":"HowToSetTheBestViewForInformationLayer","ExampleFileNames":["HowToSetTheBestViewForInformationLayer.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MapItem.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/HowToSetTheBestViewForInformationLayer/HowToSetTheBestViewForInformationLayer/","Description":"In case you have a set of elements displayed by the InformationLayer, you might want to be able to display all of them in the visible area of the map and to set the optimal zoom for them. This can be done by using the Best View feature of the RadMap. To use it you have to call the GetBestView() method of the InformationLayer and pass its items to it. This method will return a LocationRect object which represents the best view for the items in the InformationLayer. You can use it in order to adjust the RadMap center and zoom level.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"How To Set The Best View For Information Layer, DataMapping, Location, ZoomLevel, ZoomRange, HotSpot, ToolTip"},
{"Name":"Information Layer Clustered Data Source","ExampleInfo":{"Name":"Information Layer Clustered Data Source","DirectoryName":"InformationLayerClusteredDataSource","ExampleFileNames":["InformationLayerClusteredDataSource.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerClusteredDataSource/InformationLayerClusteredDataSource/","Description":"Clustered data source provides functionality for grouping of the geographic locations using some criteria. The default implementation uses distance in degrees between 2 locations as grouping condition. It can be changed at any time by creation of the new class which implements IClusterItemGenerator or which inherits from the ClusterItemGenerator class (the default built-in implementation of the grouping condition).\r\nThe clustered data source provides information layer with 2 kinds of items: ClusterItem and ClusteredItem. The first one represents cluster which contains list of the items grouped by some criteria. The second one represents wrapper around original data with some additional functionality.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Clustered Data Source, MapLayer, Pushpin, ClusterItem, ClusterTemplate"},
{"Name":"Information Layer Colorizer Colors","ExampleInfo":{"Name":"Information Layer Colorizer Colors","DirectoryName":"InformationLayerColorizerColors","ExampleFileNames":["InformationLayerColorizerColors.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerColorizerColors/InformationLayerColorizerColors/","Description":"The ColorMeasureScale can apply a different color to each range it creates. You are able to specify the desired set of colors not only for the normal fill of the shapes, but for the highlighted one too. This is done by using the ShapeFillCollection and HighlightFillCollection properties. They are collections of MapShapeFill objects.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Colorizer Colors, MapShapeReader, ShapeFillCollection, HighlightFillCollection, ColorMeasureScale, ExtendedPropertyName"},
{"Name":"Information Layer Colorizer Mode Auto","ExampleInfo":{"Name":"Information Layer Colorizer Mode Auto","DirectoryName":"InformationLayerColorizerModeAuto","ExampleFileNames":["InformationLayerColorizerModeAuto.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerColorizerModeAuto/InformationLayerColorizerModeAuto/","Description":"The ColorMeasureScale splits the values passed through its ExtendedPropertyName property and associates a fill color and highlight color for each one. It can automatically create ranges in two ways. For that purpose you have to use the Mode property of the ColorMeasureScale object. This example demonstrates the Auto mode.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Colorizer Mode Auto, MapShapeReader, ShapeFillCollection, ColorMeasureScale, ExtendedPropertyName"},
{"Name":"Information Layer Colorizer Mode Count","ExampleInfo":{"Name":"Information Layer Colorizer Mode Count","DirectoryName":"InformationLayerColorizerModeCount","ExampleFileNames":["InformationLayerColorizerModeCount.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerColorizerModeCount/InformationLayerColorizerModeCount/","Description":"The ColorMeasureScale splits the values passed through its ExtendedPropertyName property and associates a fill color and highlight color for each one. It can automatically create ranges in two ways. For that purpose you have to use the Mode property of the ColorMeasureScale object. This example demonstrates the Count mode.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Colorizer Mode Count, MapShapeReader, ShapeFillCollection, ColorMeasureScale, ExtendedPropertyName, TickMarkCount"},
{"Name":"Information Layer Colorizer Mode Ranges","ExampleInfo":{"Name":"Information Layer Colorizer Mode Ranges","DirectoryName":"InformationLayerColorizerModeRanges","ExampleFileNames":["InformationLayerColorizerModeRanges.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerColorizerModeRanges/InformationLayerColorizerModeRanges/","Description":"The ColorMeasureScale splits the values passed through its ExtendedPropertyName property and associates a fill color and highlight color for each one. It can automatically create ranges in two ways. For that purpose you have to use the Mode property of the ColorMeasureScale object. This example demonstrates the Ranges mode.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Colorizer Mode Ranges, MapShapeReader, ShapeFillCollection, RangeCollection, ColorMeasureScale, ExtendedPropertyName"},
{"Name":"Information Layer Colorizer Mode Step","ExampleInfo":{"Name":"Information Layer Colorizer Mode Step","DirectoryName":"InformationLayerColorizerModeStep","ExampleFileNames":["InformationLayerColorizerModeStep.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerColorizerModeStep/InformationLayerColorizerModeStep/","Description":"The ColorMeasureScale splits the values passed through its ExtendedPropertyName property and associates a fill color and highlight color for each one. It can automatically create ranges in two ways. For that purpose you have to use the Mode property of the ColorMeasureScale object. This example demonstrates the Step mode.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Colorizer Mode Step, MapShapeReader, ShapeFillCollection, ColorMeasureScale, ExtendedPropertyName, TickMarkStep"},
{"Name":"Information Layer Data Binding Data Mappings","ExampleInfo":{"Name":"Information Layer Data Binding Data Mappings","DirectoryName":"InformationLayerDataBindingDataMappings","ExampleFileNames":["InformationLayerDataBindingDataMappings.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MapItem.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerDataBindingDataMappings/InformationLayerDataBindingDataMappings/","Description":"When displaying a map, you might also want to visualize some data on it in the form of hot spots, pin points, etc. The InformationLayer object allows you to dynamically load and display map markers via data binding. This example demonstrates how you can use DataMappings to configure the dynamically created map markers.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Data Binding Data Mappings, HotSpot, ToolTip, Marker"},
{"Name":"Information Layer Data Binding Data Template","ExampleInfo":{"Name":"Information Layer Data Binding Data Template","DirectoryName":"InformationLayerDataBindingDataTemplate","ExampleFileNames":["InformationLayerDataBindingDataTemplate.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MapItem.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerDataBindingDataTemplate/InformationLayerDataBindingDataTemplate/","Description":"When displaying a map, you might also want to visualize some data on it in the form of hot spots, pin points, etc. The InformationLayer object allows you to dynamically load and display map markers via data binding. This example demonstrates how you can use attached properties to configure the dynamically created map markers.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Data Binding Data Template, HotSpot, ToolTip, Marker"},
{"Name":"Information Layer Framework Elements","ExampleInfo":{"Name":"Information Layer Framework Elements","DirectoryName":"InformationLayerFrameworkElements","ExampleFileNames":["InformationLayerFrameworkElements.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerFrameworkElements/InformationLayerFrameworkElements/","Description":"\nOne of the objects that can be displayed inside the InformationLayer is the FrameworkElement. This means that you can actually display anything inside the InformationLayer. If you want to compose more than one control for your element, you just have to wrap them inside one of the layout controls.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.\r\n","KeyWords":"Information Layer Framework Elements"},
{"Name":"Information Layer Graph Colorizer","ExampleInfo":{"Name":"Information Layer Graph Colorizer","DirectoryName":"InformationLayerGraphColorizer","ExampleFileNames":["InformationLayerGraphColorizer.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerGraphColorizer/InformationLayerGraphColorizer/","Description":"The RadMap provides Graph Colorizer which sets filling to the Map shapes using the coloring of graph approach as its name implies. In short when any 2 shapes which have common border they will be colored differently.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Graph Colorizer, MapShapeReader, ShapeFillCollection, HighlightFillCollection"},
{"Name":"Information Layer Hot Spots","ExampleInfo":{"Name":"Information Layer Hot Spots","DirectoryName":"InformationLayerHotSpots","ExampleFileNames":["InformationLayerHotSpots.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerHotSpots/InformationLayerHotSpots/","Description":"Normally the elements placed in the Information Layer get positioned via Location coordinates. In this way their top-left corner will coincide with the point representing the location. When using FrameworkElements in your InformationLayer you can additionally arrange them around the point via their HorizontalAlignment and VerticalAlignment properties.\r\nTo adjust the position of the element via the HotSpot you have to set its X and Y properties. Their value can be measured in different units. To choose the desired unit you have to set the XUnits and YUnits properties.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Hot Spots, MapLayer, Location"},
{"Name":"Information Layer Initialize Completed","ExampleInfo":{"Name":"Information Layer Initialize Completed","DirectoryName":"InformationLayerInitializeCompleted","ExampleFileNames":["InformationLayerInitializeCompleted.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerInitializeCompleted/InformationLayerInitializeCompleted/","Description":"The InitializeCompleted event of RadMap fires when the initialization of the map provider completes.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Initialize Completed, MapLayer, Location, BaseZoomLevel, ZoomRange"},
{"Name":"Information Layer Map Ellipse","ExampleInfo":{"Name":"Information Layer Map Ellipse","DirectoryName":"InformationLayerMapEllipse","ExampleFileNames":["InformationLayerMapEllipse.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerMapEllipse/InformationLayerMapEllipse/","Description":"The RadMap control provides you with a set of shape objects, which are specifically designed to work with the RadMap. This example demonstrates MapEllipse.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Map Ellipse, Location"},
{"Name":"Information Layer Map Line","ExampleInfo":{"Name":"Information Layer Map Line","DirectoryName":"InformationLayerMapLine","ExampleFileNames":["InformationLayerMapLine.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerMapLine/InformationLayerMapLine/","Description":"\nThe RadMap control provides you with a set of shape objects, which are specifically designed to work with the RadMap. This example demonstrates MapLine.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.\r\n","KeyWords":"Information Layer Map Line"},
{"Name":"Information Layer Map Path","ExampleInfo":{"Name":"Information Layer Map Path","DirectoryName":"InformationLayerMapPath","ExampleFileNames":["InformationLayerMapPath.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerMapPath/InformationLayerMapPath/","Description":"The RadMap control provides you with a set of shape objects, which are specifically designed to work with the RadMap. This example demonstrates MapPath.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Map Path, MapPathGeometry, MapPathFigure, MapArcSegment"},
{"Name":"Information Layer Map Polygon","ExampleInfo":{"Name":"Information Layer Map Polygon","DirectoryName":"InformationLayerMapPolygon","ExampleFileNames":["InformationLayerMapPolygon.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerMapPolygon/InformationLayerMapPolygon/","Description":"The RadMap control provides you with a set of shape objects, which are specifically designed to work with the RadMap. This example demonstrates MapPolygon.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Map Polygon, CaptionTemplate, HotSpot, MapMouseLocationIndicator"},
{"Name":"Information Layer Map Polyline","ExampleInfo":{"Name":"Information Layer Map Polyline","DirectoryName":"InformationLayerMapPolyline","ExampleFileNames":["InformationLayerMapPolyline.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerMapPolyline/InformationLayerMapPolyline/","Description":"The RadMap control provides you with a set of shape objects, which are specifically designed to work with the RadMap. This example demonstrates MapPolyline.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Map Polyline, Points"},
{"Name":"Information Layer Map Rectangle","ExampleInfo":{"Name":"Information Layer Map Rectangle","DirectoryName":"InformationLayerMapRectangle","ExampleFileNames":["InformationLayerMapRectangle.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerMapRectangle/InformationLayerMapRectangle/","Description":"The RadMap control provides you with a set of shape objects, which are specifically designed to work with the RadMap. This example demonstrates MapRectangle.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Map Rectangle, Location, RadiusX, RadiusY"},
{"Name":"Information Layer Map Shape Extended Data","ExampleInfo":{"Name":"Information Layer Map Shape Extended Data","DirectoryName":"InformationLayerMapShapeExtendedData","ExampleFileNames":["InformationLayerMapShapeExtendedData.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerMapShapeExtendedData/InformationLayerMapShapeExtendedData/","Description":"The MapShape object exposes a property called ExtendedData. It allows you to attach additional data to the shape. For example, if a shape represents a country on the map, you can use the ExtendedData property to attach information about the country such as Area, Capitol, Population etc. Later this data can be accessed through the ExtendedData property.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Map Shape Extended Data, ExtendedPropertySet, ToolTip"},
{"Name":"Information Layer Map Shape Fill","ExampleInfo":{"Name":"Information Layer Map Shape Fill","DirectoryName":"InformationLayerMapShapeFill","ExampleFileNames":["InformationLayerMapShapeFill.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerMapShapeFill/InformationLayerMapShapeFill/","Description":"The ColorMeasureScale can apply a different color to each range it creates. You are able to specify the desired set of colors not only for the normal fill of the shapes, but for the highlighted one too. This is done by using the ShapeFillCollection and HighlightFillCollection properties. They are collections of MapShapeFill objects.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Map Shape Fill, HighlightFill"},
{"Name":"Information Layer Map Shape Map Shape Fill","ExampleInfo":{"Name":"Information Layer Map Shape Map Shape Fill","DirectoryName":"InformationLayerMapShapeMapShapeFill","ExampleFileNames":["InformationLayerMapShapeMapShapeFill.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerMapShapeMapShapeFill/InformationLayerMapShapeMapShapeFill/","Description":"The MapShape objects expose two specific properties - ShapeFill and HightlightFill. The first one is applied to the shapes, when they are in their normal state. The HighlightFill gets applied when the mouse is over the shape.\r\nThe two properties are of type MapShapeFill. The MapShapeFill object allows you not only to specify the Fill color, but to modify the stroke as well.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Map Shape Map Shape Fill, HighlightFill"},
{"Name":"Information Layer Map Shape Properties","ExampleInfo":{"Name":"Information Layer Map Shape Properties","DirectoryName":"InformationLayerMapShapeProperties","ExampleFileNames":["InformationLayerMapShapeProperties.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerMapShapeProperties/InformationLayerMapShapeProperties/","Description":"When using MapShape objects there are several ways to control their appearance. This example demonstrates the trivial properties provided by the framework such as Fill, Stroke, StrokeThickness.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Map Shape Properties, MapEllipse, MapLayer, Location"},
{"Name":"Information Layer Pin Points","ExampleInfo":{"Name":"Information Layer Pin Points","DirectoryName":"InformationLayerPinPoints","ExampleFileNames":["InformationLayerPinPoints.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerPinPoints/InformationLayerPinPoints/","Description":"The MapPinPoint class is designed to represent Point objects from KML files. However, it can be also used outside the KML context in order to mark points of interest (POIs) or something else.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Pin Points, MapPinPoint, MapLayer, Location, HotSpot"},
{"Name":"Information Layer Ranges Predefined Colors","ExampleInfo":{"Name":"Information Layer Ranges Predefined Colors","DirectoryName":"InformationLayerRangesPredefinedColors","ExampleFileNames":["InformationLayerRangesPredefinedColors.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerRangesPredefinedColors/InformationLayerRangesPredefinedColors/","Description":"The ColorMeasureScale splits the values passed through its ExtendedPropertyName property and associates a fill color and highlight color for each one. It can automatically create ranges in two ways. For that purpose you have to use the Mode property of the ColorMeasureScale object. This example demonstrates the RangesPredefinedColors mode.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Ranges Predefined Colors, MapShapeReader, RangeCollection, ColorMeasureScale, ExtendedPropertyName, RangesPredefinedColors"},
{"Name":"Information Layer Unbound Mode","ExampleInfo":{"Name":"Information Layer Unbound Mode","DirectoryName":"InformationLayerUnboundMode","ExampleFileNames":["InformationLayerUnboundMode.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/InformationLayerUnboundMode/InformationLayerUnboundMode/","Description":"The InformationLayer allows you to display additional data on top of the displayed map. This data can be in the form of simple framework elements, pin points or map shapes. As the InformationLayer derives from the ItemsControl class you are able to display more than one item in one and the same InformationLayer. You can even data bind the InformationLayer to a collection of locations. This example demonstrates the unbound mode of the InformationLayer.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Information Layer Unbound Mode, Ellipse, MapLayer, BaseZoomLevel, Location, ZoomRange"},
{"Name":"KML manual reading","ExampleInfo":{"Name":"KML manual reading","DirectoryName":"KMLManualReading","ExampleFileNames":["KMLManualReading.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\bulgaria.kml"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/KMLManualReading/KMLManualReading/","Description":"The RadMap provides support for stunning map overlays through its KML-import feature. Once you have the desired set of features (place marks, images, polygons, textual descriptions, etc.) encoded in KML, you can easily import the data and visualize it through the RadMap control. In this way you can easily visualize complex shapes like country's borders on the map and fill the separate shapes with different colors in order to achieve a sort of grouping.\r\nThe RadMap allows you to manually read the file, by which you are able to get the shapes collection, without to automatically insert it into the layer. For this purpose you have to use the KMLReader static class.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"KML manual reading, KmlReader"},
{"Name":"KML map shape reader","ExampleInfo":{"Name":"KML map shape reader","DirectoryName":"KMLMapShapeReader","ExampleFileNames":["KMLMapShapeReader.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\bulgaria.kml"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/KMLMapShapeReader/KMLMapShapeReader/","Description":"\r\nThe RadMap provides support for stunning map overlays through its KML-import feature. Once you have the desired set of features (place marks, images, polygons, textual descriptions, etc.) encoded in KML, you can easily import the data and visualize it through the RadMap control. In this way you can easily visualize complex shapes like country's borders on the map and fill the separate shapes with different colors in order to achieve a sort of grouping.\r\nTo read your data you have to use the MapShapeReader class. To pass the desired KML file you have to use the Source property of the MapShapeReader and pass the Uri to the desired .kml file to it. This will automatically generate shapes according to the data inside the file.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.\r\n","KeyWords":"KML map shape reader"},
{"Name":"Map Legend","ExampleInfo":{"Name":"Map Legend","DirectoryName":"MapLegend","ExampleFileNames":["MapLegend.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/MapLegend/MapLegend/","Description":"The RadMap control introduces the MapLegend object. It allows you to display a legend for a particular Information Layer inside the RadMap control.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Map Legend, InformationLayer, MapShapeReader, Colorizer, ColorMeasureScale, ShapeFillCollection,  MapShapeFill, HighlightFillCollection, Layer"},
{"Name":"Map Shape Reader Tool Tip Format","ExampleInfo":{"Name":"Map Shape Reader Tool Tip Format","DirectoryName":"MapShapeReaderToolTipFormat","ExampleFileNames":["MapShapeReaderToolTipFormat.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/MapShapeReaderToolTipFormat/MapShapeReaderToolTipFormat/","Description":"The ToolTipFormat property of MapShapeReader is the simplest way to create a single-line tooltip. The property is of type string and allow you to display both the value of a single property of the extended data and combination of the values of different extended data properties.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Map Shape Reader Tool Tip Format, InformationLayer"},
{"Name":"Map Shape Reader Tool Tip Style","ExampleInfo":{"Name":"Map Shape Reader Tool Tip Style","DirectoryName":"MapShapeReaderToolTipStyle","ExampleFileNames":["MapShapeReaderToolTipStyle.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/MapShapeReaderToolTipStyle/MapShapeReaderToolTipStyle/","Description":"The ToolTipStyle property of MapShapeReader allows you to specify a Style of the tooltip that gets displayed. The Style should target the ToolTip control.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Map Shape Reader Tool Tip Style, InformationLayer, MapShapeReader, ToolTipFormat"},
{"Name":"Map Shape Reader Tool Tip Template","ExampleInfo":{"Name":"Map Shape Reader Tool Tip Template","DirectoryName":"MapShapeReaderToolTipTemplate","ExampleFileNames":["MapShapeReaderToolTipTemplate.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/MapShapeReaderToolTipTemplate/MapShapeReaderToolTipTemplate/","Description":"The ToolTipTemplate property of MapShapeReader allows you to define a DataTemplate for the tooltip. This way you are able to create more complex layouts like multiline content or content containing different visual elements like Borders, Images etc.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Map Shape Reader Tool Tip Template, InformationLayer, MapShapeReader, ExtendedDataConverter"},
{"Name":"Mini Map","ExampleInfo":{"Name":"Mini Map","DirectoryName":"MiniMap","ExampleFileNames":["MiniMap.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/MiniMap/MiniMap/","Description":"This example demonstrates the Mini Map feature of RadMap.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Mini Map, SizeChanged, RadExpander"},
{"Name":"Navigation Disabled","ExampleInfo":{"Name":"Navigation Disabled","DirectoryName":"NavigationDisabled","ExampleFileNames":["NavigationDisabled.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/NavigationDisabled/NavigationDisabled/","Description":"You can change the Visibility of the MapNavigation control in the default layout of RadMap using the NavigationVisibility property.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Navigation Disabled, NavigationVisibility, IsMouseWheelZoomEnabled, IsKeyboardNavigationEnabled, MouseClickMode, MouseDoubleClickMode, MouseDragMode, ZoomBarVisibility"},
{"Name":"Navigation External Map Navigation","ExampleInfo":{"Name":"Navigation External Map Navigation","DirectoryName":"NavigationExternalMapNavigation","ExampleFileNames":["NavigationExternalMapNavigation.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/NavigationExternalMapNavigation/NavigationExternalMapNavigation/","Description":"You can use the MapNavigation control outside the RadMap control. In order to associate the external MapNavigation control and the RadMap instance, set the MapControl property of MapNavigation to the respective RadMap instance.\r\nYou can configure the RadMap control not to show its default MapNavigation control using its NavigationVisibility property or the UseDefaultLayout property that disables the default layout of RadMap.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Navigation External Map Navigation, NavigationVisibility"},
{"Name":"Providers Bing Map Provider","ExampleInfo":{"Name":"Providers Bing Map Provider","DirectoryName":"ProvidersBingMapProvider","ExampleFileNames":["ProvidersBingMapProvider.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/ProvidersBingMapProvider/ProvidersBingMapProvider/","Description":"The RadMap control doesn't display a map on itself, it needs a map provider from which to consume the required data. This example demonstrates the BingRestMapProvider.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Providers Bing Map Provider, MapMode, BingMapProvider, BingRestMap"},
{"Name":"Providers Empty Provider","ExampleInfo":{"Name":"Providers Empty Provider","DirectoryName":"ProvidersEmptyProvider","ExampleFileNames":["ProvidersEmptyProvider.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/ProvidersEmptyProvider/ProvidersEmptyProvider/","Description":"\nThe RadMap control doesn't display a map on itself, it needs a map provider from which to consume the required data. This example demonstrates the EmptyProvider.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.\r\n","KeyWords":"Providers Empty Provider"},
{"Name":"Providers Open Street Map Provider","ExampleInfo":{"Name":"Providers Open Street Map Provider","DirectoryName":"ProvidersOpenStreetMapProvider","ExampleFileNames":["ProvidersOpenStreetMapProvider.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/ProvidersOpenStreetMapProvider/ProvidersOpenStreetMapProvider/","Description":"\nThe RadMap control doesn't display a map on itself, it needs a map provider from which to consume the required data. This example demonstrates the OpenStreetMapProvider.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.\r\n","KeyWords":"Providers Open Street Map Provider"},
{"Name":"Providers Uri Image Provider","ExampleInfo":{"Name":"Providers Uri Image Provider","DirectoryName":"ProvidersUriImageProvider","ExampleFileNames":["ProvidersUriImageProvider.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/ProvidersUriImageProvider/ProvidersUriImageProvider/","Description":"The RadMap control doesn't display a map on itself, it needs a map provider from which to consume the required data. This example demonstrates the UriImageProvider.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Providers Uri Image Provider, MinZoomLevel, MaxZoomLevel, NavigationVisibility, ZoomBarVisibility, CommandBarVisibility, GeoBounds"},
{"Name":"Routing","ExampleInfo":{"Name":"Routing","DirectoryName":"Routing","ExampleFileNames":["Routing.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/Routing/Routing/","Description":"The RadMap's BingRestMapProvider provides access to Bing Rest Routing services via the CalculateRouteAsync method.\nThis allows you to calculate route between different locations on the map.","KeyWords":"Routing, VisualizationLayer, UseBitmapCache, BingRestMapProvider, RoutingCompleted, RouteRequest, RouteResponse, PolylineData, Service"},
{"Name":"Shapefile Manual Reading","ExampleInfo":{"Name":"Shapefile Manual Reading","DirectoryName":"ShapefileManualReading","ExampleFileNames":["ShapefileManualReading.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/ShapefileManualReading/ShapefileManualReading/","Description":"The ESRI Shapefiles or simply the shapefiles are popular format for storing geographical data. The files spatially describe geometries like lines, polylines and polygons. These geometries may represent different geographical objects such as countries, roads, rivers, lakes etc. Via a software that supports the format, the geometries can be translated properly on a map.\r\nThe RadMap allows you to manually read the file, by which you are able to get the shapes collection, without to automatically insert it into the layer. For this purpose you have to use the ShapeFileReader static class.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Shapefile Manual Reading, InformationLayer, ShapeFileReader"},
{"Name":"Shapefile Map Shape Reader","ExampleInfo":{"Name":"Shapefile Map Shape Reader","DirectoryName":"ShapefileMapShapeReader","ExampleFileNames":["ShapefileMapShapeReader.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/ShapefileMapShapeReader/ShapefileMapShapeReader/","Description":"The ESRI Shapefiles or simply the shapefiles are popular format for storing geographical data. The files spatially describe geometries like lines, polylines and polygons. These geometries may represent different geographical objects such as countries, roads, rivers, lakes etc. Via a software that supports the format, the geometries can be translated properly on a map.\r\nTo read your data you have to use the MapShapeReader class. To pass the desired shapefile you have to use the Source property of the MapShapeReader and pass the Uri to the desired .shp file to it.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Shapefile Map Shape Reader, InformationLayer, DataSource, ExtendedDataConverter, ToolTipTemplate"},
{"Name":"SQL geospatial data","ExampleInfo":{"Name":"SQL geospatial data","DirectoryName":"SQLGeospatialData","ExampleFileNames":["SQLGeospatialData.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","WktDataRow.cs","WktDataViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/SQLGeospatialData/SQLGeospatialData/","Description":"RadGeospatialDataReader enables you to bind RadMap to SQL Geospatial data. It allows generating map shapes from any IEnumerable instance (for example a row collection) which contains a property with geospatial data in Wkt (Well known text) or Wkb (Well known binary) format. The Source property and the GeospatialPropertyName propertyare used to specify the IEnumerable instance and the name of the property which contains a Geospatial data.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"SQL geospatial data, InformationLayer, SqlGeospatialDataReader, Source, GeospatialPropertyName, ToolTipFormat, MapShapeFill, HighlightFill"},
{"Name":"View Modes Disable Command","ExampleInfo":{"Name":"View Modes Disable Command","DirectoryName":"ViewModesDisableCommand","ExampleFileNames":["ViewModesDisableCommand.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/ViewModesDisableCommand/ViewModesDisableCommand/","Description":"RadMap allows you to bring the map in several view modes. After setting the desired view mode, the user is also capable of changing the view, depending on his/her needs. He/She can do it via the button with the eye-like icon, which represents the command bar.\r\nThis example demonstrates how you can disable a specific command for a provider, e.g. changing the visibility of the map labels.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"View Modes Disable Command, BingMapBirdsEyeSource, CommandDescription, bingrest"},
{"Name":"View Modes External Map Command Bar","ExampleInfo":{"Name":"View Modes External Map Command Bar","DirectoryName":"ViewModesExternalMapCommandBar","ExampleFileNames":["ViewModesExternalMapCommandBar.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/ViewModesExternalMapCommandBar/ViewModesExternalMapCommandBar/","Description":"You can use the MapCommandBar control outside the RadMap control. In order to associate the external MapCommandBar control and the RadMap instance, set the MapControl property of MapCommandBar to the respective RadMap instance.\r\nYou can configure the RadMap control not to show its default MapCommandBar control using its CommandBarVisibility property or the UseDefaultLayout property that disables the default layout of RadMap.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"View Modes External Map Command Bar, CommandBarVisibility"},
{"Name":"View Modes Setting View Mode","ExampleInfo":{"Name":"View Modes Setting View Mode","DirectoryName":"ViewModesSettingViewMode","ExampleFileNames":["ViewModesSettingViewMode.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/ViewModesSettingViewMode/ViewModesSettingViewMode/","Description":"The RadMap allows you to bring the map in several view modes. After setting the desired view mode, the user is also capable of changing the view, depending on his/her needs. He/She can do it via the button with the eye-like icon, which represents the command bar.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"View Modes Setting View Mode, MapMode, Arial, bingrest"},
{"Name":"Visualization Layer Clustering","ExampleInfo":{"Name":"Visualization Layer Clustering","DirectoryName":"VisualizationLayerClustering","ExampleFileNames":["VisualizationLayerClustering.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\airports.dbf","Resources\\airports.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/VisualizationLayerClustering/VisualizationLayerClustering/","Description":"The VisualizationLayer supports the Clustering feature. It allows grouping of items according to a condition. The following example demonstrates how to use the Clustering feature to display the airports of USA.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Visualization Layer Clustering, ClusterItemTemplate, ClusteringEnabled, AsyncShapeFileReader, ToolTipFormat, ClusterData, ClusterState, ExpandedToPolygon"},
{"Name":"Visualization Layer Colorizer Colors","ExampleInfo":{"Name":"Visualization Layer Colorizer Colors","DirectoryName":"VisualizationLayerColorizerColors","ExampleFileNames":["VisualizationLayerColorizerColors.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/VisualizationLayerColorizerColors/VisualizationLayerColorizerColors/","Description":"The ColorMeasureScale can apply a different color to each range it creates. You are able to specify the desired set of colors not only for the normal fill of the shapes, but for the highlighted one too. This is done by using the ShapeFillCollection and HighlightFillCollection properties. They are collections of MapShapeFill objects.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Visualization Layer Colorizer Colors, ColorMeasureScale, ShapeFillCollection, HighlightFillCollection, MapShapeFill, AsyncShapeFileReader"},
{"Name":"Visualization Layer Colorizer Mode Auto","ExampleInfo":{"Name":"Visualization Layer Colorizer Mode Auto","DirectoryName":"VisualizationLayerColorizerModeAuto","ExampleFileNames":["VisualizationLayerColorizerModeAuto.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/VisualizationLayerColorizerModeAuto/VisualizationLayerColorizerModeAuto/","Description":"The ColorMeasureScale splits the values passed through its ExtendedPropertyName property and associates a fill color and highlight color for each one. It can automatically create ranges in two ways. For that purpose you have to use the Mode property of the ColorMeasureScale object. This example demonstrates the Auto mode.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Visualization Layer Colorizer Mode Auto, ColorMeasureScale, ShapeFillCollection, MapShapeFill, AsyncShapeFileReader"},
{"Name":"Visualization Layer Colorizer Mode Count","ExampleInfo":{"Name":"Visualization Layer Colorizer Mode Count","DirectoryName":"VisualizationLayerColorizerModeCount","ExampleFileNames":["VisualizationLayerColorizerModeCount.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/VisualizationLayerColorizerModeCount/VisualizationLayerColorizerModeCount/","Description":"The ColorMeasureScale splits the values passed through its ExtendedPropertyName property and associates a fill color and highlight color for each one. It can automatically create ranges in two ways. For that purpose you have to use the Mode property of the ColorMeasureScale object. This example demonstrates the Count mode.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Visualization Layer Colorizer Mode Count, ColorMeasureScale, ShapeFillCollection, HighlightFillCollection, MapShapeFill, AsyncShapeFileReader"},
{"Name":"Visualization Layer Colorizer Mode Ranges","ExampleInfo":{"Name":"Visualization Layer Colorizer Mode Ranges","DirectoryName":"VisualizationLayerColorizerModeRanges","ExampleFileNames":["VisualizationLayerColorizerModeRanges.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/VisualizationLayerColorizerModeRanges/VisualizationLayerColorizerModeRanges/","Description":"The ColorMeasureScale splits the values passed through its ExtendedPropertyName property and associates a fill color and highlight color for each one. It can automatically create ranges in two ways. For that purpose you have to use the Mode property of the ColorMeasureScale object. This example demonstrates the Ranges mode.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Visualization Layer Colorizer Mode Ranges, ColorMeasureScale, ShapeFillCollection, RangeCollection, MapShapeFill, MapRange, AsyncShapeFileReader"},
{"Name":"Visualization Layer Colorizer Mode Step","ExampleInfo":{"Name":"Visualization Layer Colorizer Mode Step","DirectoryName":"VisualizationLayerColorizerModeStep","ExampleFileNames":["VisualizationLayerColorizerModeStep.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/VisualizationLayerColorizerModeStep/VisualizationLayerColorizerModeStep/","Description":"The ColorMeasureScale splits the values passed through its ExtendedPropertyName property and associates a fill color and highlight color for each one. It can automatically create ranges in two ways. For that purpose you have to use the Mode property of the ColorMeasureScale object. This example demonstrates the Step mode.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Visualization Layer Colorizer Mode Step, ColorMeasureScale, ShapeFillCollection, MapShapeFill, AsyncShapeFileReader"},
{"Name":"Visualization Layer Colorizer Mode Ranges","ExampleInfo":{"Name":"Visualization Layer Colorizer Mode Ranges","DirectoryName":"ColorizerPredefinedColors","ExampleFileNames":["ColorizerPredefinedColors.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/VisualizationLayerColorizerPredefinedColors/ColorizerPredefinedColors/","Description":"The ColorMeasureScale splits the values passed through its ExtendedPropertyName property and associates a fill color and highlight color for each one. It can automatically create ranges in two ways. For that purpose you have to use the Mode property of the ColorMeasureScale object. This example demonstrates the RangesPredefinedColors mode.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Visualization Layer Colorizer Mode Ranges, ColorMeasureScale, RangeCollection, MapShapeFill, MapRange, AsyncShapeFileReader"},
{"Name":"Visualization Layer Graph Colorizer","ExampleInfo":{"Name":"Visualization Layer Graph Colorizer","DirectoryName":"VisualizationLayerGraphColorizer","ExampleFileNames":["VisualizationLayerGraphColorizer.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/VisualizationLayerGraphColorizer/VisualizationLayerGraphColorizer/","Description":"The RadMap provides Graph Colorizer which sets filling to the Map shapes using the coloring of graph approach as its name implies. In short when any 2 shapes which have common border they will be colored differently.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Visualization Layer Graph Colorizer, ColorMeasureScale, GraphColoriser, ShapeFillCollection, HighlightFillCollection, MapShapeFill, AsyncShapeFileReader"},
{"Name":"Visualization Layer Items Selection","ExampleInfo":{"Name":"Visualization Layer Items Selection","DirectoryName":"VisualizationLayerItemsSelection","ExampleFileNames":["VisualizationLayerItemsSelection.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MapItem.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/VisualizationLayerItemsSelection/VisualizationLayerItemsSelection/","Description":"This example demonstrates how to implement items selection for point-type objects (i.e. objects which represent single location on the map).\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Visualization Layer Items Selection, MapPinPoint, ToolTip, LocationRect, MapItem, SelectionChanged"},
{"Name":"Visualization Layer Shape Selection","ExampleInfo":{"Name":"Visualization Layer Shape Selection","DirectoryName":"VisualizationLayerShapeSelection","ExampleFileNames":["VisualizationLayerShapeSelection.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","Resources\\world.dbf","Resources\\world.shp"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/VisualizationLayerShapeSelection/VisualizationLayerShapeSelection/","Description":"This example demonstrates how to implement items selection feature for the map shape objects. The VisualizationLayer handles selection state of the map shape objects automatically so we do not need to do anything specific. We just have to set filling for the different states of the shape objects: ShapeFill, HighlightFill and SelectedFill\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Visualization Layer Shape Selection, MapShapeFill, HighlightFill, SelectedFill, AsyncShapeFileReader, MapShapeData"},
{"Name":"Zooming Disabled","ExampleInfo":{"Name":"Zooming Disabled","DirectoryName":"ZoomingDisabled","ExampleFileNames":["ZoomingDisabled.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/ZoomingDisabled/ZoomingDisabled/","Description":"You can change the Visibility of the MapZoomBar control in the default layout of RadMap using the ZoomBarVisibility property.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Zooming Disabled, ZoomBarVisibility, IsMouseWheelZoomEnabled, MouseDoubleClickMode"},
{"Name":"Zooming External Map Zoom Bar","ExampleInfo":{"Name":"Zooming External Map Zoom Bar","DirectoryName":"ZoomingExternalMapZoomBar","ExampleFileNames":["ZoomingExternalMapZoomBar.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/ZoomingExternalMapZoomBar/ZoomingExternalMapZoomBar/","Description":"You can use the MapZoomBar control outside the RadMap control. In order to associate the external MapZoomBar control and the RadMap instance, set the MapControl property of MapZoomBar to the respective RadMap instance.\r\nYou can configure the RadMap control not to show its default MapZoomBar control using its ZoomBarVisibility property or the UseDefaultLayout property that disables the default layout of RadMap.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Zooming External Map Zoom Bar, ZoomBarVisibility"},
{"Name":"Zooming Preset With Custom Label","ExampleInfo":{"Name":"Zooming Preset With Custom Label","DirectoryName":"ZoomingPresetWithCustomLabel","ExampleFileNames":["ZoomingPresetWithCustomLabel.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Map/Silverlight/ZoomingPresetWithCustomLabel/ZoomingPresetWithCustomLabel/","Description":"This example demonstrates how you can add a custom zoom level to the MapZoomBar.\r\n\r\nTo see and run the example, please use the 'Open in VS' button and execute the project inside Visual Studio.","KeyWords":"Zooming Preset With Custom Label, CommandDescription"}]