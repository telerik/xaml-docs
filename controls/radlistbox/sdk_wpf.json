[{"Name":"Custom Drag Visual Style","ExampleInfo":{"Name":"Custom Drag Visual Style","ProjectPath":"C:\\SDK-details-repository\\ListBox\\CustomDragVisualStyle\\CustomDragVisualStyle_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\ListBox\\CustomDragVisualStyle\\Readme.md","DirectoryName":"CustomDragVisualStyle","ExampleFileNames":["CustomDragVisualStyle_WPF.csproj","App.xaml","App.xaml.cs","Country.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","ViewModel.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/ListBox/CustomDragVisualStyle/","Description":"\nThis example demonstrates how to create a custom DragVisualProvider in order to change its Foreground, Background, BorderBrush and Template for\r\nSilverlight and WPF.","KeyWords":"Custom Drag Visual Style"},
{"Name":"Custom Drop Cue With Wrap Panel","ExampleInfo":{"Name":"Custom Drop Cue With Wrap Panel","ProjectPath":"C:\\SDK-details-repository\\ListBox\\CustomDropCueWithWrapPanel\\CustomDropCueWithWrapPanel_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\ListBox\\CustomDropCueWithWrapPanel\\Readme.md","DirectoryName":"CustomDropCueWithWrapPanel","ExampleFileNames":["CustomDropCueWithWrapPanel_WPF.csproj","App.xaml","App.xaml.cs","CustomLinearDropVisualProvider.cs","Item.cs","MainWindow.xaml","MainWindow.xaml.cs","ViewModel.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/ListBox/CustomDropCueWithWrapPanel/","Description":"\nThis example demonstrates how to customize the LinearDropVisualProvider of RadListBox. In the example you can notice that when dragging an item in the ListBox the DropVisual is different.","KeyWords":"Custom Drop Cue With Wrap Panel"},
{"Name":"Custom List Box Drag Drop Behavior","ExampleInfo":{"Name":"Custom List Box Drag Drop Behavior","ProjectPath":"C:\\SDK-details-repository\\ListBox\\CustomListBoxDragDropBehavior\\CustomListBoxDragDropBehavior_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\ListBox\\CustomListBoxDragDropBehavior\\Readme.md","DirectoryName":"CustomListBoxDragDropBehavior","ExampleFileNames":["CustomListBoxDragDropBehavior_WPF.csproj","App.xaml","App.xaml.cs","Customer.cs","CustomerViewModel.cs","MainWindow.xaml","MainWindow.xaml.cs","MyListBoxDragDropBehavior.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/ListBox/CustomListBoxDragDropBehavior/","Description":"\nThis example demonstrates how to customize ListBoxDragDropBehavior of RadListBox. In the example the right ListBox control has the custom MyListBoxDragDropBehavior and when items are dragged/dropped from/in it an Alert massage is shown with the items details.","KeyWords":"Custom List Box Drag Drop Behavior"},
{"Name":"Differently Colored Unfocused SelectedItems","ExampleInfo":{"Name":"Differently Colored Unfocused SelectedItems","ProjectPath":"C:\\SDK-details-repository\\ListBox\\DifferentlyColoredUnfocusedSelectedItems\\DifferentlyColoredUnfocusedSelectedItems_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\ListBox\\DifferentlyColoredUnfocusedSelectedItems\\Readme.md","DirectoryName":"DifferentlyColoredUnfocusedSelectedItems","ExampleFileNames":["DifferentlyColoredUnfocusedSelectedItems_WPF.csproj","App.config","App.xaml","App.xaml.cs","BoolToColorConverter.cs","MainWindow.xaml","MainWindow.xaml.cs","ViewModel.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/ListBox/DifferentlyColoredUnfocusedSelectedItems/","Description":"\r\nThis sample project demonstates how to change the background color of RadListBoxItems when RadListBox loses the focus.","KeyWords":"Differently Colored Unfocused SelectedItems"},
{"Name":"Data conversion between two RadListBox controls","ExampleInfo":{"Name":"Data conversion between two RadListBox controls","ProjectPath":"C:\\SDK-details-repository\\ListBox\\DragDropDataConversion\\DragDropDataConversion_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\ListBox\\DragDropDataConversion\\Readme.md","DirectoryName":"DragDropDataConversion","ExampleFileNames":["DragDropDataConversion_WPF.csproj","App.xaml","App.xaml.cs","Customer.cs","CustomerToProjectConverter.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Project.cs","ProjectToCustomerConverter.cs","ViewModel.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/ListBox/DragDropDataConversion/","Description":"\r\nThis example demonstrates how to convert data when using drag and drop between two RadListBox controls. The left RadListBox control is bound to a collection of Customer object and the right one is bound to a collection of Project objects. The conversion is handled by two custom DataConverters.","KeyWords":"Data conversion between two RadListBox controls"},
{"Name":"Drag and drop with ScheduleView","ExampleInfo":{"Name":"Drag and drop with ScheduleView","ProjectPath":"C:\\SDK-details-repository\\ListBox\\DragDropWithScheduleView\\DragDropWithScheduleView_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\ListBox\\DragDropWithScheduleView\\Readme.md","DirectoryName":"DragDropWithScheduleView","ExampleFileNames":["DragDropWithScheduleView_WPF.csproj","App.xaml","App.xaml.cs","AppointmentToCustomerConverter.cs","Customer.cs","CustomScheduleViewDragDropBehavior.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","ViewModel.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/ListBox/DragDropWithScheduleView/","Description":"\r\nThis example demonstrates how to achieve drag and drop functionality between RadListBox and RadScheduleView by creating AppointmentToCustomerConverter and CustomScheduleViewDragDropBehavior\r\nfor Silverlight and WPF.","KeyWords":"Drag and drop with ScheduleView"},
{"Name":"Modified ListBoxDragVisualStyle","ExampleInfo":{"Name":"Modified ListBoxDragVisualStyle","ProjectPath":"C:\\SDK-details-repository\\ListBox\\ModifyListBoxDragVisualStyle\\ModifyListBoxDragVisualStyle_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\ListBox\\ModifyListBoxDragVisualStyle\\Readme.md","DirectoryName":"ModifyListBoxDragVisualStyle","ExampleFileNames":["ModifyListBoxDragVisualStyle_WPF.csproj","App.xaml","App.xaml.cs","Country.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","ViewModel.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/ListBox/ModifyListBoxDragVisualStyle/","Description":"\r\nThis example demonstrates how to create a modified ListBoxDragVisualStyle in order to remove the before and after specifiers for Silverlight and WPF.","KeyWords":"Modified ListBoxDragVisualStyle"},
{"Name":"Create attached property for SelectedItems","ExampleInfo":{"Name":"Create attached property for SelectedItems","ProjectPath":"C:\\SDK-details-repository\\ListBox\\SelectedItems\\SelectedItems_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\ListBox\\SelectedItems\\Readme.md","DirectoryName":"SelectedItems","ExampleFileNames":["SelectedItems_WPF.csproj","App.xaml","App.xaml.cs","Country.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","SelectedItemsHelper.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/ListBox/SelectedItems/","Description":"\r\nIMPORTANT:\r\n\r\nWith the release of Telerik UI for WPF Q1 2015 there is a new functionality for achieving MVVM scenarios where the SelectedItems of the RadListBox should be bound to a collection from the view model. More details can be found in our online documentation: \r\n- For WPF here: http://docs.telerik.com/devtools/wpf/controls/radlistbox/features/selecteditemssource\r\n- For Silverlight here: http://docs.telerik.com/devtools/silverlight/controls/radlistbox/features/selecteditemssource\r\n\r\nThis example demonstrates how to create an attached property that could be used in order to bind a collection of objects to the control \r\nand use it as a collection of selected items for Silverlight and WPF.","KeyWords":"Create attached property for SelectedItems"},
{"Name":"How to bind SelectedItems in MVVM","ExampleInfo":{"Name":"How to bind SelectedItems in MVVM","ProjectPath":"C:\\SDK-details-repository\\ListBox\\SelectedItemsSource\\SelectedItemsSource_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\ListBox\\SelectedItemsSource\\Readme.md","DirectoryName":"SelectedItemsSource","ExampleFileNames":["SelectedItemsSource_WPF.csproj","App.xaml","App.xaml.cs","Example.xaml","Example.xaml.cs","Item.cs","MainWindow.xaml","MainWindow.xaml.cs","SDK icon.ico","ViewModel.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/ListBox/SelectedItemsSource/","Description":"\r\nThis example demonstrates how to use the built-in ListBoxSelectedItemsBehavior of the RadListBox control in order to bind a collection of objects which will be two way synced with the control's SelectedItems collection.","KeyWords":"How to bind SelectedItems in MVVM"}]