[{"Name":"AddContextMenu","ExampleInfo":{"Name":"AddContextMenu","DirectoryName":"AddContextMenu","ExampleFileNames":["ContextMenu_WPF.csproj","App.config","App.xaml","App.xaml.cs","Division.cs","League.cs","MainWindow.xaml","MainWindow.xaml.cs","RadTreeViewSampleData.cs","readme.md","Team.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/AddContextMenu/","Description":"Add Context Menu\nThis project demonstrates how you can add a ContextMenu to root level items and implement add sibling, add child and delete functionality.\n\n[//]:","KeyWords":"AddContextMenu,  new, node, child, parent, delete, sibling, right, click"},
{"Name":"BindToSelfReferencingData","ExampleInfo":{"Name":"BindToSelfReferencingData","DirectoryName":"BindToSelfReferencingData","ExampleFileNames":["BindToSelfReferencingData_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Converters\\HierarchyConverter.cs","Models\\DataItem.cs","Models\\DataItemCollection.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/BindToSelfReferencingData/","Description":"Bind To Self Referencing Data\nThis example shows how to display a self referencing data from a flat collection in a RadTreeView.\n\n[//]:","KeyWords":"BindToSelfReferencingData,  collection, custom, reference, hierarchical"},
{"Name":"BringIntoView","ExampleInfo":{"Name":"BringIntoView","DirectoryName":"BringIntoView","ExampleFileNames":["BringIntoView_WPF.csproj","App.xaml","App.xaml.cs","BusinessItem.cs","MainPage.xaml","MainPage.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","readme.md","SampleViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/BringIntoView/","Description":"Bring Into View\nThis example demonstrates how to bring an item into view when the RadTreeView UIVirtualization feature is used.\n\n[//]:","KeyWords":"BringIntoView,  id, node, virtualization, path, scroll, mvvm, bringpathintoview"},
{"Name":"CancelDragStart","ExampleInfo":{"Name":"CancelDragStart","DirectoryName":"CancelDragStart","ExampleFileNames":["CancelDragStart_WPF.csproj","App.config","App.xaml","App.xaml.cs","DataItem.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/CancelDragStart/","Description":"Cancel Drag Start \nThis example demonstrates how to cancel the drag operation for a specific item.\n\n[//]:","KeyWords":"CancelDragStart,  drag,isdragdropenabled,cancel,dragdropmanager,draginitialize"},
{"Name":"CustomDragVisual","ExampleInfo":{"Name":"CustomDragVisual","DirectoryName":"CustomDragVisual","ExampleFileNames":["CustomDragVisual_WPF.csproj","App.config","App.xaml","App.xaml.cs","CustomTreeView.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/CustomDragVisual/","Description":"Custom Drag Visual\nThe CustomDragVisual SDK demonstrates how you can set custom content for the DragVisual of the RadTreeView.\r\nFor detailed description of the approach you can visit the online help article in our DragDrop section.\r\n\r\n[//]:","KeyWords":"CustomDragVisual,  drop, over, content, change, update, dragging"},
{"Name":"DenyDropVisualFeedback","ExampleInfo":{"Name":"DenyDropVisualFeedback","DirectoryName":"DenyDropVisualFeedback","ExampleFileNames":["DenyDropVisualFeedback_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","readme.md","ViewModels\\Division.cs","ViewModels\\League.cs","ViewModels\\RadTreeViewSampleData.cs","ViewModels\\Team.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/DenyDropVisualFeedback/","Description":"Deny Drop Visual Feedback\nThis example demonstrates how to deny a drop operation over a specific item (of type Division) and modify the visual feedback to indicate that the operation is not allowed.\n\n[//]:","KeyWords":"DenyDropVisualFeedback,  over, drag, dragging, content, change, update, forbidden, cancel, hierarchical, databinding, mvvm, tooltip"},
{"Name":"DragDropBetweenTreeViews","ExampleInfo":{"Name":"DragDropBetweenTreeViews","DirectoryName":"DragDropBetweenTreeViews","ExampleFileNames":["DragDropBetweenTreeViews_WPF.csproj","App.config","App.xaml","App.xaml.cs","ApplicationViewModel.cs","MainPage.xaml","MainPage.xaml.cs","MainViewModel.cs","MainWindow.xaml","MainWindow.xaml.cs","MediaFile.cs","PartitionViewModel.cs","Resource.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/DragDropBetweenTreeViews/","Description":"Drag Drop Between Tree Views\nThis example demonstrates drag and drop between two RadTreeView controls with different view models.\n\n[//]:","KeyWords":"DragDropBetweenTreeViews,  dragdrop, dragdropmanager, node, different, databinding, mvvm"},
{"Name":"DragDropTreeViewToControls","ExampleInfo":{"Name":"DragDropTreeViewToControls","DirectoryName":"DragDropTreeViewToControls","ExampleFileNames":["DragDropTreeViewToControls_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","readme.md","Behaviors\\ListBoxDragDropBehavior.cs","ViewModels\\CategoryViewModel.cs","ViewModels\\DropIndicationDetails.cs","ViewModels\\ProductViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/DragDropTreeViewToControls/","Description":"Drag Drop Tree View To Controls\nThis example demonstrates how to implement drag and drop between a RadTreeView and a ListBox, using the RadTreeView built-in DragDrop functionality.\n\n[//]:","KeyWords":"DragDropTreeViewToControls,   radlistbox, dragdropmanager, node, hierarchical, databinding, mvvm"},
{"Name":"EnableOnlyDropInsideItem","ExampleInfo":{"Name":"EnableOnlyDropInsideItem","DirectoryName":"EnableOnlyDropInsideItem","ExampleFileNames":["EnableOnlyDropInsideItem_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","readme.md","ViewModels\\Division.cs","ViewModels\\League.cs","ViewModels\\RadTreeViewSampleData.cs","ViewModels\\Team.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/EnableOnlyDropInsideItem/","Description":"Enable Only Drop Inside Item\nThis example demonstrates how to enable dropping inside the RadTreeViewItems, but not around them. \n\n[//]:","KeyWords":"EnableOnlyDropInsideItem,  node, dragdropmanager, dragging, child, hierarchical, databinding, mvvm"},
{"Name":"FilterSearchSort","ExampleInfo":{"Name":"FilterSearchSort","DirectoryName":"FilterSearchSort","ExampleFileNames":["FilterSearchSort_WPF.csproj","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","readme.md","ViewModels\\Category.cs","ViewModels\\Product.cs","ViewModels\\SampleDataSource.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/FilterSearchSort/","Description":"Filter Search Sort\nThis example demonstrates how to implement filtering and sorting logic on the collection displayed inside the RadTreeView control. The example also showcases how to implement a search functionality traversing the data displayed in the RadTreeView to find a specific item.\n\n[//]:","KeyWords":"FilterSearchSort,  viewmodel, hierarchical, databinding, mvvm"},
{"Name":"SearchWithHighlight","ExampleInfo":{"Name":"SearchWithHighlight","DirectoryName":"SearchWithHighlight","ExampleFileNames":["SearchWithHighlight_WPF.csproj","App.config","App.xaml","App.xaml.cs","DataItem.cs","InlineModel.cs","MainViewModel.cs","MainWindow.xaml","MainWindow.xaml.cs","readme.md","TextBlockUtilities.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/SearchWithHighlight/","Description":"Search With Highlight\nThis example demonstrates how to implement the search functionality by highlighting the searched text.\n\n[//]:","KeyWords":"SearchWithHighlight,  viewmodel, search, highlight, mvvm"},
{"Name":"ShowTooltipWhenNodeIsClipped","ExampleInfo":{"Name":"ShowTooltipWhenNodeIsClipped","DirectoryName":"ShowTooltipWhenNodeIsClipped","ExampleFileNames":["ShowTooltipWhenNodeIsClipped_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","readme.md","TextBlockUtils.cs","TreeNode.cs","TreeViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/ShowTooltipWhenNodeIsClipped/","Description":"Show Tooltip When Node Is Clipped\n\nThis example demonstrates how to show tooltip when the Header property of the RadTreeViewItem is clipped.\n\n[//]:","KeyWords":"ShowTooltipWhenNodeIsClipped,  viewmodel, hierarchical, databinding, mvvm, overflow, texttrimming, characterellipsis"},
{"Name":"ShuttleControl","ExampleInfo":{"Name":"ShuttleControl","DirectoryName":"ShuttleControl","ExampleFileNames":["ShuttleControl_WPF.csproj","App.config","App_WPF.xaml","App_WPF.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md","ShuttleUtilities.cs","ViewModels\\NodeViewModel.cs","ViewModels\\ShuttleTreeViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/ShuttleControl/","Description":"Shuttle Control\r\n\r\nThis example demonstrates how you can combine two RadTreeView controls to implement a shuttle control. You can easily move/remove one or multiple select items from one to the other tree view.\r\n\r\n[//]:","KeyWords":"ShuttleControl,  shuttlecontrol, databinding, mvvm"},
{"Name":"TreeListViewBringItemIntoView","ExampleInfo":{"Name":"TreeListViewBringItemIntoView","DirectoryName":"TreeListViewBringItemIntoView","ExampleFileNames":["TreeListBringItem_WPF.csproj","App.config","App.xaml","App.xaml.cs","DataItem.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/TreeListViewBringItemIntoView/","Description":" Tree List View Bring Item Into View\nTreeListBringItem sample demonstrates how you can bring a particular, deeply nested TreeListViewRow into view. This might be helpful if you need a fast hierarchy control with many nested levels and RadTreeView is slow in your particular scenario with bring into view. This example is configured in such way that the TreeListView behaves and feels much like RadTreeView.\r\nThe first button will bring an item which is 20 levels deep with updating the UI on every level expansion. The second button will update the UI only when the bring operation is finished.\r\nPlease have in mind that running the application without debugger (Ctrl + F5 when in VS) will result in faster user experience.\r\n","KeyWords":"TreeListViewBringItemIntoView"},
{"Name":"WindowsExplorerLikeTreeView","ExampleInfo":{"Name":"WindowsExplorerLikeTreeView","DirectoryName":"WindowsExplorerLikeTreeView","ExampleFileNames":["Windows_Explorer_Like_TreeView_WPF.csproj","App.config","App.xaml","App.xaml.cs","Directory.cs","Drive.cs","File.cs","ItemStyleSelector.cs","MainWindow.xaml","MainWindow.xaml.cs","ServiceFacade.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/WindowsExplorerLikeTreeView/","Description":"Windows Explorer Like Tree View\nThis project is available only for WPF because in Silverlight we do not have access to the file system.\r\n\r\nDescription:\r\nThis project demonstrates how you can create a TreeView similar to the Windows Explorer's one. The application traverses the file system of the user and displays all available drives, folders and files. Also it applies different styles to the different items.\r\n\r\n[//]:","KeyWords":"WindowsExplorerLikeTreeView,  loadondemand, databinding, mvvm "}]