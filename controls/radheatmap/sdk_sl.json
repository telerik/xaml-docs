[{"Name":"Colorizers _ Categorical Definition","ExampleInfo":{"Name":"Colorizers _ Categorical Definition","ProjectPath":"C:\\SDK-details-repository\\HeatMap\\SL\\Colorizers_CategoricalDefinition\\Colorizers_CategoricalDefinition.csproj","ReadmePath":"C:\\SDK-details-repository\\HeatMap\\SL\\Colorizers_CategoricalDefinition\\Readme.md","DirectoryName":"Colorizers_CategoricalDefinition","ExampleFileNames":["Colorizers_CategoricalDefinition.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MonthlyTemp.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/HeatMap/SL/Colorizers_CategoricalDefinition/","Description":"\nThis example aims to walk you through colorizers in categorical definition. The only difference between the Categorical and the Horizontal/Vertical definition is that in the Categorical only one colorizer at a time can be applied. Besides this, the colorizers behave in the same way","KeyWords":"Colorizers _ Categorical Definition"},
{"Name":"Colorizers _ Vertical Definition","ExampleInfo":{"Name":"Colorizers _ Vertical Definition","ProjectPath":"C:\\SDK-details-repository\\HeatMap\\SL\\Colorizers_VerticalDefinition\\Colorizers_VerticalDefinition.csproj","ReadmePath":"C:\\SDK-details-repository\\HeatMap\\SL\\Colorizers_VerticalDefinition\\Readme.md","DirectoryName":"Colorizers_VerticalDefinition","ExampleFileNames":["Colorizers_VerticalDefinition.csproj","App.xaml","App.xaml.cs","Car.cs","Colorizers.xaml","MainPage.xaml","MainPage.xaml.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/HeatMap/SL/Colorizers_VerticalDefinition/","Description":"\nThis example aims to walk you through colorizers in Vertical definition. In the scenario of Vertical Definition, the colorizer is defined in the MemberMappings of the corresponding definition.","KeyWords":"Colorizers _ Vertical Definition"},
{"Name":"Drag To Select","ExampleInfo":{"Name":"Drag To Select","ProjectPath":"C:\\SDK-details-repository\\HeatMap\\SL\\DragToSelect\\DragToSelect.csproj","ReadmePath":"C:\\SDK-details-repository\\HeatMap\\SL\\DragToSelect\\Readme.md","DirectoryName":"DragToSelect","ExampleFileNames":["DragToSelect.csproj","App.xaml","App.xaml.cs","HeatMapUtilities.cs","MainPage.xaml","MainPage.xaml.cs","ViewModels\\CarInfo.cs","ViewModels\\MainViewModel.cs","ViewModels\\TempInfo.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/HeatMap/SL/DragToSelect/","Description":"\nAn example that demonstrates how easily you can implement drag-to-select with the heatmap, using the custom utilities class.","KeyWords":"Drag To Select"},
{"Name":"Populating With Data","ExampleInfo":{"Name":"Populating With Data","ProjectPath":"C:\\SDK-details-repository\\HeatMap\\SL\\PopulatingWithData\\PopulatingWithData.csproj","ReadmePath":"C:\\SDK-details-repository\\HeatMap\\SL\\PopulatingWithData\\Readme.md","DirectoryName":"PopulatingWithData","ExampleFileNames":["PopulatingWithData.csproj","App.xaml","App.xaml.cs","MainPage.xaml","MainPage.xaml.cs","TempInfo.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/HeatMap/SL/PopulatingWithData/","Description":"\nThis example aims to demonstrate the data binding feature of RadHeatMap. You can bind the RadHeatMap to any source that implements one of the following interfaces:\r\n\r\n  - IEnumerable - supports simple iteration of a collection. See the MSDN article for more on IEnumerable.\r\n  - ICollection - extends IEnumerable and supports size, enumerator, and synchronization methods for collections.\r\n  - IList - extends ICollection and is the base class for lists. ","KeyWords":"Populating With Data"}]