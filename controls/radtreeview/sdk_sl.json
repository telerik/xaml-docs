[{"Name":"Add Context Menu","ExampleInfo":{"Name":"Add Context Menu","DirectoryName":"AddContextMenu","ExampleFileNames":["ContextMenu_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Division.cs","League.cs","MainPage.xaml","MainPage.xaml.cs","RadTreeViewSampleData.cs","Team.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/AddContextMenu/","Description":"This project demonstrates how you can add a ContextMenu to root level items and implement add sibling, add child and delete functionality.","KeyWords":"Add Context Menu,  new, node, child, parent, delete, sibling, right, click"},
{"Name":"Bind To Self Referencing Data","ExampleInfo":{"Name":"Bind To Self Referencing Data","DirectoryName":"BindToSelfReferencingData","ExampleFileNames":["BindToSelfReferencingData_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Converters\\HierarchyConverter.cs","Models\\DataItem.cs","Models\\DataItemCollection.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/BindToSelfReferencingData/","Description":"This example shows how to display a self referencing data from a flat collection in a RadTreeView.","KeyWords":"Bind To Self Referencing Data,  collection, custom, reference, hierarchical"},
{"Name":"Bring Into View","ExampleInfo":{"Name":"Bring Into View","DirectoryName":"BringIntoView","ExampleFileNames":["BringIntoView_SL.csproj","App_SL.xaml","App_SL.xaml.cs","BusinessItem.cs","MainPage.xaml","MainPage.xaml.cs","SampleViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/BringIntoView/","Description":"This example demonstrates how to bring an item into view when the RadTreeView UIVirtualization feature is used.","KeyWords":"Bring Into View,  id, node, virtualization, path, scroll, mvvm, bringpathintoview"},
{"Name":"Cancel Drag Start","ExampleInfo":{"Name":"Cancel Drag Start","DirectoryName":"CancelDragStart","ExampleFileNames":["CancelDragStart_SL.csproj","App_SL.xaml","App_SL.xaml.cs","DataItem.cs","Example.xaml","Example.xaml.cs","MainPage.xaml","MainPage.xaml.cs","readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/CancelDragStart/","Description":"This example demonstrates how to cancel the drag operation for a specific item.","KeyWords":"Cancel Drag Start,  drag,isdragdropenabled,cancel,dragdropmanager,draginitialize"},
{"Name":"Custom Drag Visual","ExampleInfo":{"Name":"Custom Drag Visual","DirectoryName":"CustomDragVisual","ExampleFileNames":["CustomDragVisual_SL.csproj","App_SL.xaml","App_SL.xaml.cs","CustomTreeView.cs","Example.xaml","Example.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/CustomDragVisual/","Description":"The CustomDragVisual SDK demonstrates how you can set custom content for the DragVisual of the RadTreeView.\r\nFor detailed description of the approach you can visit the online help article in our DragDrop section.","KeyWords":"Custom Drag Visual,  drop, over, content, change, update, dragging"},
{"Name":"Deny Drop Visual Feedback","ExampleInfo":{"Name":"Deny Drop Visual Feedback","DirectoryName":"DenyDropVisualFeedback","ExampleFileNames":["DenyDropVisualFeedback_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","ViewModels\\Division.cs","ViewModels\\League.cs","ViewModels\\RadTreeViewSampleData.cs","ViewModels\\Team.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/DenyDropVisualFeedback/","Description":"This example demonstrates how to deny a drop operation over a specific item (of type Division) and modify the visual feedback to indicate that the operation is not allowed.","KeyWords":"Deny Drop Visual Feedback,  over, drag, dragging, content, change, update, forbidden, cancel, hierarchical, databinding, mvvm, tooltip"},
{"Name":"Drag Drop Between Tree Views","ExampleInfo":{"Name":"Drag Drop Between Tree Views","DirectoryName":"DragDropBetweenTreeViews","ExampleFileNames":["DragDropBetweenTreeViews_SL.csproj","ApplicationViewModel.cs","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MainViewModel.cs","MediaFile.cs","PartitionViewModel.cs","Resource.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/DragDropBetweenTreeViews/","Description":"This example demonstrates drag and drop between two RadTreeView controls with different view models.","KeyWords":"Drag Drop Between Tree Views,  dragdrop, dragdropmanager, node, different, databinding, mvvm"},
{"Name":"Drag Drop Tree View To Controls","ExampleInfo":{"Name":"Drag Drop Tree View To Controls","DirectoryName":"DragDropTreeViewToControls","ExampleFileNames":["DragDropTreeViewToControls_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Behaviors\\ListBoxDragDropBehavior.cs","ViewModels\\CategoryViewModel.cs","ViewModels\\DropIndicationDetails.cs","ViewModels\\ProductViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/DragDropTreeViewToControls/","Description":"This example demonstrates how to implement drag and drop between a RadTreeView and a ListBox, using the RadTreeView built-in DragDrop functionality.","KeyWords":"Drag Drop Tree View To Controls,   radlistbox, dragdropmanager, node, hierarchical, databinding, mvvm"},
{"Name":"Enable Only Drop Inside Item","ExampleInfo":{"Name":"Enable Only Drop Inside Item","DirectoryName":"EnableOnlyDropInsideItem","ExampleFileNames":["EnableOnlyDropInsideItem_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","ViewModels\\Division.cs","ViewModels\\League.cs","ViewModels\\RadTreeViewSampleData.cs","ViewModels\\Team.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/EnableOnlyDropInsideItem/","Description":"This example demonstrates how to enable dropping inside the RadTreeViewItems, but not around them.","KeyWords":"Enable Only Drop Inside Item,  node, dragdropmanager, dragging, child, hierarchical, databinding, mvvm"},
{"Name":"Filter Search Sort","ExampleInfo":{"Name":"Filter Search Sort","DirectoryName":"FilterSearchSort","ExampleFileNames":["FilterSearchSort_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","ViewModels\\Category.cs","ViewModels\\Product.cs","ViewModels\\SampleDataSource.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/FilterSearchSort/","Description":"This example demonstrates how to implement filtering and sorting logic on the collection displayed inside the RadTreeView control. The example also showcases how to implement a search functionality traversing the data displayed in the RadTreeView to find a specific item.","KeyWords":"Filter Search Sort,  viewmodel, hierarchical, databinding, mvvm"},
{"Name":"Shuttle Control","ExampleInfo":{"Name":"Shuttle Control","DirectoryName":"ShuttleControl","ExampleFileNames":["ShuttleControl_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md","ShuttleUtilities.cs","ViewModels\\NodeViewModel.cs","ViewModels\\ShuttleTreeViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/ShuttleControl/","Description":"This example demonstrates how you can combine two RadTreeView controls to implement a shuttle control. You can easily move/remove one or multiple select items from one to the other tree view.","KeyWords":"Shuttle Control,  shuttlecontrol, databinding, mvvm"},
{"Name":"Tree List View Bring Item Into View","ExampleInfo":{"Name":"Tree List View Bring Item Into View","DirectoryName":"TreeListViewBringItemIntoView","ExampleFileNames":["TreeListViewBringItem_SL.csproj","App_SL.xaml","App_SL.xaml.cs","DataItem.cs","Example.xaml","Example.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/TreeView/TreeListViewBringItemIntoView/","Description":"\nTreeListBringItem sample demonstrates how you can bring a particular, deeply nested TreeListViewRow into view. This might be helpful if you need a fast hierarchy control with many nested levels and RadTreeView is slow in your particular scenario with bring into view. This example is configured in such way that the TreeListView behaves and feels much like RadTreeView.\r\nThe first button will bring an item which is 20 levels deep with updating the UI on every level expansion. The second button will update the UI only when the bring operation is finished.\r\nPlease have in mind that running the application without debugger (Ctrl + F5 when in VS) will result in faster user experience.\r\n","KeyWords":"Tree List View Bring Item Into View"}]