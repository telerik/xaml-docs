[{"Name":"AlternationRowStyleSelector","ExampleInfo":{"Name":"AlternationRowStyleSelector","DirectoryName":"AlternationRowStyleSelector","ExampleFileNames":["AlternationRowStyleSelector_SL.csproj","AlternationRowStyle.cs","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/AlternationRowStyleSelector/","Description":" Row Alternation With RowStyleSelector\r\nThis example demonstrates how to simulate row alternation with a RowStyleSelector.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/style-selectors/rowstyleselector.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/style-selectors/rowstyleselector.html","KeyWords":"AlternationRowStyleSelector"},
{"Name":"AutoCompleteStringFilterEditor","ExampleInfo":{"Name":"AutoCompleteStringFilterEditor","DirectoryName":"AutoCompleteStringFilterEditor","ExampleFileNames":["AutoCompleteStringFilterEditor_SL.csproj","App_SL.xaml","App_SL.xaml.cs","AutoCompleteFilterStringColumn.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/AutoCompleteStringFilterEditor/","Description":"Filter Editor With Autocomplete\nThis example demonstrates how you can extend a string column, so that its field filter editors have the auto-complete functionality. \r\nTo achieve this, a custom AutoCompleteFilterStringColumn is defined.\r\nWhen you open the FilteringControl for that column and start typing in any of the editors, an auto-complete dropdown will appear.\r\n\r\n[//]:","KeyWords":"AutoCompleteStringFilterEditor,  extend, column, field, functionality, filteringcontrol"},
{"Name":"BindingColumnsFromViewModel","ExampleInfo":{"Name":"BindingColumnsFromViewModel","DirectoryName":"BindingColumnsFromViewModel","ExampleFileNames":["BindingColumnsFromViewModel_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MyColumnsBindingBehavior.cs","MyDataContext.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/BindingColumnsFromViewModel/","Description":"Binding Columns From ViewModel\nThis example demonstrates how to implement a custom attached behavior in order to bind columns from your ViewModel. You can check the code in MyColumnsBindingBehavior.cs.\n\n[//]:","KeyWords":"BindingColumnsFromViewModel,  attached, behavior"},
{"Name":"BindingRowDetailsElementWidth","ExampleInfo":{"Name":"BindingRowDetailsElementWidth","DirectoryName":"BindingRowDetailsElementWidth","ExampleFileNames":["BindingRowDetailsElementWidth_SL.csproj","App_SL.xaml","App_SL.xaml.cs","BindingRowDetailsWidthBehavior.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Player.cs","Readme.md","WidthProxy.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/BindingRowDetailsElementWidth/","Description":"Binding RowDetails Element Width\nThis example demonstrates how to synchronize the width of the element defined in the RowDetailsTemplate to its parent in RadGridView using an attached behavior.\n\n[//]:","KeyWords":"BindingRowDetailsElementWidth,  synchronize, child, parent, attached, behavior"},
{"Name":"BindingSelectedItemsFromViewModel","ExampleInfo":{"Name":"BindingSelectedItemsFromViewModel","DirectoryName":"BindingSelectedItemsFromViewModel","ExampleFileNames":["BindingSelectedItemsFromViewModel_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Example.xaml","Example.xaml.cs","GridViewSelectionUtilities.cs","MainPage.xaml","MainPage.xaml.cs","MyDataContext.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/BindingSelectedItemsFromViewModel/","Description":"Binding SelectedItems From ViewModel \nThis example demonstrates how to implement a custom attached behavior in order to bind SelectedItems from and to your ViewModel.\n\n[//]:","KeyWords":"BindingSelectedItemsFromViewModel,  custom, attached, behavior"},
{"Name":"BindingToDynamicObject","ExampleInfo":{"Name":"BindingToDynamicObject","DirectoryName":"BindingToDynamicObject","ExampleFileNames":["BindingToDynamicObject_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MyDataRow.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/BindingToDynamicObject/","Description":"Binding to DynamicObject\nThis example demonstrates how a DynamicObject can be bound to RadGridView.\n\n[//]:","KeyWords":"BindingToDynamicObject,  bind, dynamicobject, dynamic"},
{"Name":"BindingToICustomTypeProvider","ExampleInfo":{"Name":"BindingToICustomTypeProvider","DirectoryName":"BindingToICustomTypeProvider","ExampleFileNames":["BindingToICustomTypeProvider_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md","Data\\Club.cs","Helpers\\MyPropertyInfo.cs","Helpers\\MyType.cs","Helpers\\MyTypeHelper.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/BindingToICustomTypeProvider/","Description":"Binding to ICustomTypePovider\nThis example demonstrates how an object implementing the ICustomTypePovider interface can be defined and bound to RadGridView.\nIn WPF the interface is available only in .NET 4.5 or higher and to run the example you should open in Visual Studio and replace the existing binaries with the ones in the WPF45 folder.\n\n[//]:","KeyWords":"BindingToICustomTypeProvider,  bind, icustomtypeprovider, dynamic"},
{"Name":"BoundSelectColumn","ExampleInfo":{"Name":"BoundSelectColumn","DirectoryName":"BoundSelectColumn","ExampleFileNames":["BoundSelectColumn_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","Example.xaml","Example.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/BoundSelectColumn/","Description":"Bound GridViewSelectColumn\r\nGridViewSelectColumn is bound internally to GridViewRow's IsSelected property. This example demonstrates how to bind GridViewRow's IsSelected property to a property of your business object.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/columns/columntypes/column-types-select-column.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/columntypes/column-types-select-column.html\r\n\r\n[//]:","KeyWords":"BoundSelectColumn,  isselected, gridviewrow, property"},
{"Name":"CascadingComboboxColumns","ExampleInfo":{"Name":"CascadingComboboxColumns","DirectoryName":"CascadingComboboxColumns","ExampleFileNames":["CascadingComboboxColumns_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Locations.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CascadingComboboxColumns/","Description":"Cascading Combobox Columns\nThis example demonstrates a common scenario where entering data is a cascade of comboboxes, where the list in the next combo is populated after selecting a value in the previous one.\r\n\r\n[//]:","KeyWords":"CascadingComboboxColumns,  populate, selected, value, next, previous"},
{"Name":"CellStyleSelector","ExampleInfo":{"Name":"CellStyleSelector","DirectoryName":"CellStyleSelector","ExampleFileNames":["CustomCellStyleSelector_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md","StadiumCapacityStyle.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CellStyleSelector/","Description":"CellStyleSelector\r\nThis example demonstrates how to style conditionally RadGridView cells using a CellStyleSelector.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/style-selectors/cell-style-selector.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/style-selectors/cell-style-selector.html\r\n\r\n[//]:","KeyWords":"CellStyleSelector,  condition"},
{"Name":"ChangeCellBackgroundFromViewModel","ExampleInfo":{"Name":"ChangeCellBackgroundFromViewModel","DirectoryName":"ChangeCellBackgroundFromViewModel","ExampleFileNames":["ChangeCellBackgroundFromViewModel_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md","StadiumCapacityStyle.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ChangeCellBackgroundFromViewModel/","Description":"Change Cell Background From ViewModel\r\nThis example demonstrates how to change GridViewCell's background based on a condition involving a value of a property from your ViewModel.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/style-selectors/cell-style-selector.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/style-selectors/cell-style-selector.html\r\n\r\n[//]:","KeyWords":"ChangeCellBackgroundFromViewModel,  condition, cellstyleselector, property"},
{"Name":"ChangingThemesRuntime","ExampleInfo":{"Name":"ChangingThemesRuntime","DirectoryName":"ChangingThemesRuntime","ExampleFileNames":["ChangingThemesRuntime_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MyDataContext.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ChangingThemesRuntime/","Description":"Changing Themes Runtime\nThis example demonstrates how to implement runtime change for all implicit themes. This is achieved by clearing the merged dictionaries from the application resources and merging the new resource dictionaries for the selected theme from the theme assemblies.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/styling-and-appearance/styling-apperance-themes-runtime.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/styling-and-appearance/styling-apperance-themes-runtime.html\r\n\r\n[//]:","KeyWords":"ChangingThemesRuntime,  implicit"},
{"Name":"CloseFilteringPopupFilterButton","ExampleInfo":{"Name":"CloseFilteringPopupFilterButton","DirectoryName":"CloseFilteringPopupFilterButton","ExampleFileNames":["CloseFilteringPopupFilterButton_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyFilteringControl.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CloseFilteringPopupFilterButton/","Description":"Close Filtering Popup\r\nThis example demonstrates how to close the Filtering Popup on pressing the Filter button by creating a custom FilteringControl and overriding its OnApplyFilter method.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/filtering/how-to/howto-close-filtering-popup-on-pressing-the-filter-button.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/filtering/how-to/howto-close-filtering-popup-on-pressing-the-filter-button.html\r\n\r\n[//]:","KeyWords":"CloseFilteringPopupFilterButton,  filteringcontrol, onapplyfilter, button, press"},
{"Name":"ColumnChooser","ExampleInfo":{"Name":"ColumnChooser","DirectoryName":"ColumnChooser","ExampleFileNames":["ColumnChooser_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MyDataContext.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ColumnChooser/","Description":"Column Chooser\nThis example demonstrates how to implement custom column chooser in order to hide/show desired columns in RadGridView.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/features/overview-controlpanel.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/features/overview-controlpanel.html\r\n\r\n[//]:","KeyWords":"ColumnChooser,  hide, show, desired"},
{"Name":"ColumnSelection","ExampleInfo":{"Name":"ColumnSelection","DirectoryName":"ColumnSelection","ExampleFileNames":["ColumnSelection_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ColumnSelection/","Description":"Column Selection\r\nThis example demonstrates how to select all cells from a column by either clicking on its header or by using a checkbox in the header template.\r\n\r\n[//]:","KeyWords":"ColumnSelection,  click, checkbox, header, selectall, cells"},
{"Name":"ColumnSettings","ExampleInfo":{"Name":"ColumnSettings","DirectoryName":"ColumnSettings","ExampleFileNames":["ColumnSettings_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ColumnSettings/","Description":"Column Settings\nThis example demonstrates usage of different column properties. You can use the configuration panel on the left to experiment with the different column settings.\n\n[//]:","KeyWords":"ColumnSettings,  properties"},
{"Name":"ColumnsReorderSyncWithListBox","ExampleInfo":{"Name":"ColumnsReorderSyncWithListBox","DirectoryName":"ColumnsReorderSyncWithListBox","ExampleFileNames":["ColumnsReorderSyncWithListBox_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","ColumnsCollectionConverter.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ColumnsReorderSyncWithListBox/","Description":"Columns Reorder Sync With ListBox\r\nThis example demonstrates how to reorder RadGridView's columns through drag and drop on a ListBox outside RadGridView.\r\n\r\n[//]:","KeyWords":"ColumnsReorderSyncWithListBox,  synchronously, drag, drop"},
{"Name":"ComboboxColumn","ExampleInfo":{"Name":"ComboboxColumn","DirectoryName":"ComboboxColumn","ExampleFileNames":["ComboboxColumn_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Country.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Pilot.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ComboboxColumn/","Description":"Combobox Column\nThis example demonstrates how to configure GridViewComboBoxColumn by setting its ItemsSource property.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/columns/columntypes/column-types-combobox-column\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/columntypes/column-types-combobox-column\r\n\r\n[//]:","KeyWords":"ComboboxColumn,  gridviewcomboboxcolumn, itemssource, property, configure"},
{"Name":"ComboboxColumnEditable","ExampleInfo":{"Name":"ComboboxColumnEditable","DirectoryName":"ComboboxColumnEditable","ExampleFileNames":["ComboboxColumnEditable_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Country.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Pilot.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ComboboxColumnEditable/","Description":"Combobox Column Editable\nThis example demonstrates how use GridViewComboBoxColumn and allow the user to edit it and add new items to its ItemsSource. \r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/columns/columntypes/column-types-combobox-column\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/columntypes/column-types-combobox-column\r\n\r\n[//]:","KeyWords":"ComboboxColumnEditable,  gridviewcomboboxcolumn, add, items, itemssource"},
{"Name":"ComboboxColumnItemsSourceBinding","ExampleInfo":{"Name":"ComboboxColumnItemsSourceBinding","DirectoryName":"ComboboxColumnItemsSourceBinding","ExampleFileNames":["ComboboxColumnItemsSourceBinding_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Pilot.cs","Readme.md","Team.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ComboboxColumnItemsSourceBinding/","Description":"Combobox Column ItemsSource Binding and FilterMemberPath\nThis example demonstrates how to configure GridViewComboBoxColumn with ItemsSourceBinding and FilterMemberPath properties in RadGridView.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/columns/columntypes/column-types-combobox-column\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/columntypes/column-types-combobox-column\r\n\r\n[//]:","KeyWords":"ComboboxColumnItemsSourceBinding,  gridviewcomboboxcolumn, configure, itemssourcebinding"},
{"Name":"ControlPanel","ExampleInfo":{"Name":"ControlPanel","DirectoryName":"ControlPanel","ExampleFileNames":["ControlPanel_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","IdentityConverter.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ControlPanel/","Description":"Control Panel\nThis example demonstrates how you can configure ControlPanelItems for RadGridView.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/features/overview-controlpanel\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/features/overview-controlpanel\r\n\r\n[//]:","KeyWords":"ControlPanel,  items, controlpanelitems"},
{"Name":"ControlPanelEvents","ExampleInfo":{"Name":"ControlPanelEvents","DirectoryName":"ControlPanelEvents","ExampleFileNames":["ControlPanelEvents_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ControlPanelEvents/","Description":"Control Panel Events\r\nThis example demonstrates how to subscribe to events of ControlPanel's button.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/features/overview-controlpanel\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/features/overview-controlpanel\r\n\r\n[//]:","KeyWords":"ControlPanelEvents,  subscribe, events, button"},
{"Name":"CopyPasteFunctionality","ExampleInfo":{"Name":"CopyPasteFunctionality","DirectoryName":"CopyPasteFunctionality","ExampleFileNames":["CopyPasteFunctionality_SL.csproj","App_SL.xaml","App_SL.xaml.cs","GridViewClipboardContextMenu.cs","GridViewClipboardCustomBehavior_SL.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md","SampleData\\ProductsSampleDataSource.xaml","SampleData\\ProductsSampleDataSource.xaml.cs","SampleData\\ProductsSampleDataSource.xsd"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CopyPasteFunctionality/","Description":"Copy Paste Functionality\nThis example demonstrates different copy/paste scenarios supported by RadGridView. You can configure ClipboardCopyMode and ClipboardPasteMode through a ContextMenu displayed on right click over the control.\r\nThere are also various additional options to be configured on the rightmost side of the window.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/clipboard/copying.html\r\nFor SL - http://docs.telerik.com/devtools/wpf/controls/radgridview/clipboard/pasting.html\r\n\r\n[//]:","KeyWords":"CopyPasteFunctionality,  clipboardcopymode, clipboardpastemode, scenarios, contextmenu, configure, options"},
{"Name":"CustomAggregateFunctionEnumerableProperty","ExampleInfo":{"Name":"CustomAggregateFunctionEnumerableProperty","DirectoryName":"CustomAggregateFunctionEnumerableProperty","ExampleFileNames":["CustomAggregateFunctionEnumerableProperty_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","CustomSumFunction.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Period.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CustomAggregateFunctionEnumerableProperty/","Description":" Custom Aggregate Function For Enumerable Property\r\nThis example demonstrates how to implement a custom aggregate function for an enumerable property of the underlying object.","KeyWords":"CustomAggregateFunctionEnumerableProperty"},
{"Name":"CustomColumn","ExampleInfo":{"Name":"CustomColumn","DirectoryName":"CustomColumn","ExampleFileNames":["CustomColumn_SL.csproj","App_SL.xaml","App_SL.xaml.cs","GridViewPercentageColumn.cs","MainPage.xaml","MainPage.xaml.cs","MyDataContext.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CustomColumn/","Description":"Custom Column\nThis example demonstrates how to implement custom column inherited from GridViewDataColumn. A custom progress column has been created by overriding GridViewDataColumn's CreateCellElement and CreateCellEditElement methods.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/columns/how-to/add-button-column\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/how-to/add-button-column\r\n\r\n[//]:","KeyWords":"CustomColumn,  gridviewdatacolumn, progress, createcellelement, createcelleditelement"},
{"Name":"CustomColumnEditor","ExampleInfo":{"Name":"CustomColumnEditor","DirectoryName":"CustomColumnEditor","ExampleFileNames":["CustomColumnEditor_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Captain.cs","Club.cs","CustomCaptainEditor.xaml","CustomCaptainEditor.xaml.cs","CustomColumn.cs","MainPage.xaml","MainPage.xaml.cs","MyConverter.cs","MyViewModel.cs","Position.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CustomColumnEditor/","Description":"Create Custom Column Editor\r\nThis example demonstrates how you can create a custom column editor bound to specific properties of the business object.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/columns/how-to/create-custom-column-editor\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/how-to/create-custom-column-editor\r\n\r\n[//]:","KeyWords":"CustomColumnEditor,  properties, bound, createcellelement, createcelleditelement"},
{"Name":"CustomColumnFilterDescriptor","ExampleInfo":{"Name":"CustomColumnFilterDescriptor","DirectoryName":"CustomColumnFilterDescriptor","ExampleFileNames":["CustomColumnFilterDescriptor_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Days.cs","FlagsEnumColumn.cs","FlagsEnumColumnFilterDescriptor.cs","MainPage.xaml","MainPage.xaml.cs","Person.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CustomColumnFilterDescriptor/","Description":"Custom Column Filter Descriptor\nThis example demonstrates how you can extend the stock ColumnFilterDescriptor in order to change the filtering expression that it generates. \r\nThis expression will be the one used for filtering by our data engine. \r\nThis example requires advanced knowledge of LINQ Expression Trees. \r\nYou can learn more about LINQ Expression Trees at http://msdn.microsoft.com/en-us/library/bb397951.aspx\r\n\r\n[//]:","KeyWords":"CustomColumnFilterDescriptor,  linq, expression, trees, data, engine"},
{"Name":"CustomFilterControl","ExampleInfo":{"Name":"CustomFilterControl","DirectoryName":"CustomFilterControl","ExampleFileNames":["CustomFilterControl_SL.csproj","App_SL.xaml","App_SL.xaml.cs","FromDateToDateFilterControl_SL.xaml","FromDateToDateFilterControl_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CustomFilterControl/","Description":"Custom Filter Control\nThis example demonstrates how to create and apply a custom filtering control for a RadGridView column.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/filtering/how-to/howto-create-a-custom-field-filter-editor\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/filtering/how-to/howto-create-a-custom-field-filter-editor\r\n\r\n[//]:","KeyWords":"CustomFilterControl,  create, column"},
{"Name":"CustomHierarchyUsingRowDetails","ExampleInfo":{"Name":"CustomHierarchyUsingRowDetails","DirectoryName":"CustomHierarchyUsingRowDetails","ExampleFileNames":["CustomHierarchyUsingRowDetails_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MyDataContext.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CustomHierarchyUsingRowDetails/","Description":"Custom Hierarchy Using RowDetails\nThis example demonstrates how to implement custom hierarchy using RowDetails and GridViewToggleRowDetailsColumn.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/row-details/overview\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/row-details/overview\r\n\r\n[//]:","KeyWords":"CustomHierarchyUsingRowDetails,  gridviewtogglerowdetailscolumn, toggle, column"},
{"Name":"CustomKeyboardCommandProvider","ExampleInfo":{"Name":"CustomKeyboardCommandProvider","DirectoryName":"CustomKeyboardCommandProvider","ExampleFileNames":["CustomKeyboardCommandProvider_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","KeyboardCommandProvider.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/CustomKeyboardCommandProvider/","Description":"Custom Keyboard Command Provider\r\nThis example demonstrates how to predefine the default KeyboardCommandProvider.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/commands/KeyboardCommandProvider\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/commands/KeyboardCommandProvider\r\n\r\n[//]:","KeyWords":"CustomKeyboardCommandProvider,  define, override"},
{"Name":"DistinctValuesFilteringCaseSensitivity","ExampleInfo":{"Name":"DistinctValuesFilteringCaseSensitivity","DirectoryName":"DistinctValuesFilteringCaseSensitivity","ExampleFileNames":["DistinctValuesFilteringCaseSensitivity_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/DistinctValuesFilteringCaseSensitivity/","Description":"Case-InSensitive Distinct Values\r\nThis example demonstrates how to configure case insensitive distinct values in filter.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/filtering/how-to/howto-display-all-distinct-values.html#display-case-insensitive-distinct-values\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/filtering/how-to/howto-display-all-distinct-values.html#display-case-insensitive-distinct-values\r\n\r\n[//]:","KeyWords":"DistinctValuesFilteringCaseSensitivity,  filter"},
{"Name":"DragDropWithLines","ExampleInfo":{"Name":"DragDropWithLines","DirectoryName":"DragDropWithLines","ExampleFileNames":["DragDropWithLines_SL.csproj","App_SL.xaml","App_SL.xaml.cs","DropIndicationDetails.cs","MainPage.xaml","MainPage.xaml.cs","MessageViewModel.cs","Readme.md","RowReorderBehavior.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/DragDropWithLines/","Description":" Drag And Drop Within RadGridView\r\nThis example demonstrates how to implement drag and drop within RadGridView, giving the user feedback where the dragged item will be dropped.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/dragdropmanager/how-to/howto-draganddrop-within-radgridview\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/dragdropmanager/how-to/howto-draganddrop-within-radgridview","KeyWords":"DragDropWithLines"},
{"Name":"ExpandAllRowDetails","ExampleInfo":{"Name":"ExpandAllRowDetails","DirectoryName":"ExpandAllRowDetails","ExampleFileNames":["ExpandAllRowDetails_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Player.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ExpandAllRowDetails/","Description":" Expand All RowDetails\r\nThis example demonstrates how to expand all RowDetails.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/row-details/overview\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/row-details/overview","KeyWords":"ExpandAllRowDetails"},
{"Name":"ExportImageColumn","ExampleInfo":{"Name":"ExportImageColumn","DirectoryName":"ExportImageColumn","ExampleFileNames":["ExportImageColumn_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","Example.xaml","Example.xaml.cs","ExampleViewModel.cs","ExportableImageColumn.cs","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ExportImageColumn/","Description":"Export Image Column \r\nThis example demonstrates how to export a GridViewImageColumn to XLSX and PDF using the ExportToWorkbook extension method and the RadSpreadProcessing library.\r\n\r\n[//]:","KeyWords":"ExportImageColumn,  export, image, column, xlsx, pdf, excel, spreadprocessing"},
{"Name":"ExportMultipleGridViewsToOneDocument","ExampleInfo":{"Name":"ExportMultipleGridViewsToOneDocument","DirectoryName":"ExportMultipleGridViewsToOneDocument","ExampleFileNames":["ExportMultipleGridViewsToOneDocument_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Player.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ExportMultipleGridViewsToOneDocument/","Description":"Export Multiple GridViews To One Document\nThis example demonstrates how you can utilize RadPdfProcessing and RadSpreadProcessing in order to export several RadGridView instances in a single document. It also shows how you can export RadGridView to a file on the file system.\n\n[//]:","KeyWords":"ExportMultipleGridViewsToOneDocument,  radpdfprocessing, radspreadprocessing, file, single"},
{"Name":"ExportPagedDataExcel","ExampleInfo":{"Name":"ExportPagedDataExcel","DirectoryName":"ExportPagedDataExcel","ExampleFileNames":["ExportPagedDataExcel_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ExportPagedDataExcel/","Description":" Export Paged Data To Excel\nThis example demonstrates how to export paged data to Excel.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/export/export-xlsx\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/export/export-xlsx","KeyWords":"ExportPagedDataExcel"},
{"Name":"FilterAsYouTypeGridViewInsideComboBox","ExampleInfo":{"Name":"FilterAsYouTypeGridViewInsideComboBox","DirectoryName":"FilterAsYouTypeGridViewInsideComboBox","ExampleFileNames":["FilterAsYouTypeGridViewInsideComboBox_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MyDataContext.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/FilterAsYouTypeGridViewInsideComboBox/","Description":"Filter As You Type Inside ComboBox\nThis example demonstrates how to implement filter-as-you-type for a RadGridView placed inside a RadComboBox.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/filtering/basic.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/filtering/basic.html\r\n\r\n[//]:","KeyWords":"FilterAsYouTypeGridViewInsideComboBox,  incremental, search"},
{"Name":"FilterAsYouTypeWithFilterRow","ExampleInfo":{"Name":"FilterAsYouTypeWithFilterRow","DirectoryName":"FilterAsYouTypeWithFilterRow","ExampleFileNames":["FilterAsYouTypeWithFilterRow_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Player.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/FilterAsYouTypeWithFilterRow/","Description":"Filter As You Type With FilterRow\r\nThis example demonstrates how to search as you type in the FilterRow's TextBoxes.\r\n\r\nMore details can be found in our online help:\r\nWPF: http://docs.telerik.com/devtools/wpf/controls/radgridview/filtering/basic.html#filter-row\r\nSL: http://docs.telerik.com/devtools/silverlight/controls/radgridview/filtering/basic.html#filter-row\r\n\r\n[//]:","KeyWords":"FilterAsYouTypeWithFilterRow,  incremental, search"},
{"Name":"FilteringBooleanProperty","ExampleInfo":{"Name":"FilteringBooleanProperty","DirectoryName":"FilteringBooleanProperty","ExampleFileNames":["FilteringBooleanProperty_SL.csproj","App_SL.xaml","App_SL.xaml.cs","BooleanToYesNoConverter.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/FilteringBooleanProperty/","Description":"Filtering On A Boolean Property\r\nThis example demonstrates how to show user-friendly text instead of True and False when filtering boolean property by using an IValueConverter.\r\n\r\nMore details can be found in our online help:\r\nWPF: http://docs.telerik.com/devtools/wpf/controls/radgridview/filtering/basic.html\r\nSL: http://docs.telerik.com/devtools/silverlight/controls/radgridview/filtering/basic.html\r\n\r\n[//]:","KeyWords":"FilteringBooleanProperty,  value, converter"},
{"Name":"FilteringButtonsStates","ExampleInfo":{"Name":"FilteringButtonsStates","DirectoryName":"FilteringButtonsStates","ExampleFileNames":["FilteringButtonsStates_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyFilteringControl.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/FilteringButtonsStates/","Description":"States Of Filtering Buttons\r\nThis example demonstrates how to control the enabled and disabled state of the Filter and Close buttons in the FilterngControl.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/filtering/basic.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/filtering/basic.html\r\n\r\n[//]:","KeyWords":"FilteringButtonsStates,  filteringcontrol, enabled, disabled, close"},
{"Name":"FilteringCollectionProperties","ExampleInfo":{"Name":"FilteringCollectionProperties","DirectoryName":"FilteringCollectionProperties","ExampleFileNames":["FilteringCollectionProperties_SL.csproj","App_SL.xaml","App_SL.xaml.cs","CollectionPropertyColumn.cs","CollectionPropertyColumnFilterDescriptor.cs","MainPage.xaml","MainPage.xaml.cs","Person.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/FilteringCollectionProperties/","Description":"Filtering Collection Properties\nThis example demonstrates how you can extend the stock ColumnFilterDescriptor in order to filter collection properties.\r\nThis example requires advanced knowledge of LINQ Expression Trees. \r\nYou can learn more about LINQ Expression Trees at http://msdn.microsoft.com/en-us/library/bb397951.aspx.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/filtering/basic.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/filtering/basic.html\r\n\r\n[//]:","KeyWords":"FilteringCollectionProperties,  columnfilterdescriptor, linq, expression, trees"},
{"Name":"ForegroundColorSelectedHoveredRow","ExampleInfo":{"Name":"ForegroundColorSelectedHoveredRow","DirectoryName":"ForegroundColorSelectedHoveredRow","ExampleFileNames":["ForegroundColorSelectedHoveredRow_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ForegroundColorSelectedHoveredRow/","Description":"Modify ForegroundColor Of Selected Row\r\nThis example demonstrates how to modify the Foreground color of the selected/hovered row by modifying the default GridViewRow style.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/styling-and-appearance/styling-apperance-implicit-styles-overview\r\nhttp://docs.telerik.com/devtools/wpf/styling-and-appearance/styling-apperance-editing-control-templates\r\nFor SL - http://docs.telerik.com/devtools/silverlight/styling-and-appearance/styling-apperance-implicit-styles-overview\r\nhttp://docs.telerik.com/devtools/silverlight/styling-and-appearance/styling-apperance-editing-control-templates\r\n\r\n[//]:","KeyWords":"ForegroundColorSelectedHoveredRow,  hovered, gridviewrow, style, controltemplate"},
{"Name":"GroupSelection","ExampleInfo":{"Name":"GroupSelection","DirectoryName":"GroupSelection","ExampleFileNames":["GroupSelection_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MyBehavior.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/GroupSelection/","Description":"Group Selection\nThis example demonstrates how to implement an item selection on GroupRow level when using GridViewSelectColumn.\n\n[//]:","KeyWords":"GroupSelection,  attached, behavior, checkbox, select, column"},
{"Name":"HierarchyExpandButtonStyleSelector","ExampleInfo":{"Name":"HierarchyExpandButtonStyleSelector","DirectoryName":"HierarchyExpandButtonStyleSelector","ExampleFileNames":["HierarchyExpandButtonStyleSelector_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyHierarchyExpandButtonStyleSelector.cs","MyViewModel.cs","Player.cs","Position.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/HierarchyExpandButtonStyleSelector/","Description":"Hierarchy Expand Button StyleSelector\r\nThis example demonstrates how you can use the HierarchyExpandButtonStyleSelector property of RadGridView to apply a different style to GridViewRow's hierarchy expand button based on some value.\r\n\r\n[//]:","KeyWords":"HierarchyExpandButtonStyleSelector,  hierarchy, expand, button, style, selector, styleselector"},
{"Name":"ImageColumnFiltering","ExampleInfo":{"Name":"ImageColumnFiltering","DirectoryName":"ImageColumnFiltering","ExampleFileNames":["ImageColumnFiltering_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","ImageFilterColumn.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ImageColumnFiltering/","Description":"Image Column Filtering\nThis example demonstrates how to override GridViewImageColumn's distinct values to be images and not a string path.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/columns/columntypes/image-column.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/columntypes/image-column.html\r\n\r\n[//]:","KeyWords":"ImageColumnFiltering,  gridviewimagecolumn, distinct, values"},
{"Name":"InsertNewRowOnEnterAndScroll","ExampleInfo":{"Name":"InsertNewRowOnEnterAndScroll","DirectoryName":"InsertNewRowOnEnterAndScroll","ExampleFileNames":["InsertNewRowOnEnterAndScroll_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","CustomKeyboardCommandProvider.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Player.cs","Position.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/InsertNewRowOnEnterAndScroll/","Description":"Insert New Item on Enter and Scroll To It\r\nThis example demonstrates how to insert a new item once the Enter key is pressed when already editing a new row. In addition, the control scrolls to the new item. The desired result is achieved by using a custom keyboard command provider.\r\n\r\n[//]:","KeyWords":"InsertNewRowOnEnterAndScroll,  insert, new, item, scroll, keyboard, command, provider"},
{"Name":"LightweightTemplateForCells","ExampleInfo":{"Name":"LightweightTemplateForCells","DirectoryName":"LightweightTemplateForCells","ExampleFileNames":["LightweightTemplateForCells_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","MyConverter.cs","MyDataContext.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/LightweightTemplateForCells/","Description":"Lightweight Template For Cells\nThis example demonstrates how to implement custom lightweight template for GridViewCell.\n\n[//]:","KeyWords":"LightweightTemplateForCells,  gridviewcell, custom"},
{"Name":"LightweightTemplates","ExampleInfo":{"Name":"LightweightTemplates","DirectoryName":"LightweightTemplates","ExampleFileNames":["LightweightTemplates_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/LightweightTemplates/","Description":"Lightweight Templates\nThis example demonstrates how to apply lightweight templates for RadGridView in order to limit the number of visual elements within the templates and speed up performance. \r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/features/overview-lightweight-template.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/features/overview-lightweight-template.html\r\n\r\n[//]:","KeyWords":"LightweightTemplates,  apply, simplified, style, core"},
{"Name":"LocateRowAsYouType","ExampleInfo":{"Name":"LocateRowAsYouType","DirectoryName":"LocateRowAsYouType","ExampleFileNames":["LocateRowAsYouType_SL.csproj","App_SL.xaml","App_SL.xaml.cs","books.xml","MainPage.xaml","MainPage.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/LocateRowAsYouType/","Description":"Locate Row As You Type\nThis example demonstrates how to implement search-as-you-type functionality. The first row to match the search criteria is scrolled into view.\n\n[//]:","KeyWords":"LocateRowAsYouType,  search, scroll, into, view, match, criteria"},
{"Name":"NewRowPosition","ExampleInfo":{"Name":"NewRowPosition","DirectoryName":"NewRowPosition","ExampleFileNames":["NewRowPosition_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/NewRowPosition/","Description":" New Row Position\nThis example demonstrates how you can configure the NewRowPosition property of RadGridView.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/rows/adding-rows.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/rows/adding-rows.html","KeyWords":"NewRowPosition"},
{"Name":"PrintPreviewWithSpreadsheet","ExampleInfo":{"Name":"PrintPreviewWithSpreadsheet","DirectoryName":"PrintPreviewWithSpreadsheet","ExampleFileNames":["PrintPreviewWithSpreadsheet_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","PrintAndExportExtensions.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/PrintPreviewWithSpreadsheet/","Description":" Print Preview With RadSpreadSheet\r\nThis example demonstrates how to implement PrintPreview functionality for RadGridView using the RadSpreadsheet control.","KeyWords":"PrintPreviewWithSpreadsheet"},
{"Name":"ReadOnlyBinding","ExampleInfo":{"Name":"ReadOnlyBinding","DirectoryName":"ReadOnlyBinding","ExampleFileNames":["ReadOnlyBinding_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ReadOnlyBinding/","Description":"Read Only Binding\nThis example demonstrates how to control which rows or cells to be read only by using read-only binding.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/columns/how-to/read-only-rows-cells.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/how-to/read-only-rows-cells.html\r\n\r\n[//]:","KeyWords":"ReadOnlyBinding,  rows, cells"},
{"Name":"ReadOnlyStyleSelector","ExampleInfo":{"Name":"ReadOnlyStyleSelector","DirectoryName":"ReadOnlyStyleSelector","ExampleFileNames":["ReadOnlyStyleSelector_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md","ReadOnlyStyle.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ReadOnlyStyleSelector/","Description":"Read-Only Style Selector\r\nThis example demonstrates how to style Read-Only RadGridView cells using a CellStyleSelector.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/style-selectors/cell-style-selector.html\r\nhttp://docs.telerik.com/devtools/wpf/controls/radgridview/columns/how-to/read-only-rows-cells\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/style-selectors/cell-style-selector.html\r\nhttp://docs.telerik.com/devtools/silverlight/controls/radgridview/columns/how-to/read-only-rows-cells\r\n\r\n[//]:","KeyWords":"ReadOnlyStyleSelector,  cellstyleselector"},
{"Name":"ReusingControlPanelItems","ExampleInfo":{"Name":"ReusingControlPanelItems","DirectoryName":"ReusingControlPanelItems","ExampleFileNames":["ReusingControlPanelItems_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","IdentityConverter.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ReusingControlPanelItems/","Description":"Reusing ControlPanel Items \r\nThis example demonstrates how you can add a common Style targeting the ControlPanel that all the RadGridView controls in the application will inherit.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/features/overview-controlpanel.html#reusing-control-panel-items\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/features/overview-controlpanel.html#reusing-control-panel-items\r\n\r\n[//]:","KeyWords":"ReusingControlPanelItems,  common, style, target, inherit"},
{"Name":"RowDetailsTemplateSelector","ExampleInfo":{"Name":"RowDetailsTemplateSelector","DirectoryName":"RowDetailsTemplateSelector","ExampleFileNames":["RowDetailsTemplateSelector_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyCustomRowDetailsTemplateSelector.cs","MyViewModel.cs","Player.cs","Position.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/RowDetailsTemplateSelector/","Description":"Row Details Template Selector\r\nThis example demonstrates how you can use the RowDetailsTemplateSelector property of RadGridView to apply different templates based on some value.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://www.telerik.com/help/wpf/gridview-template-selectors-overview.html\r\nFor SL - http://www.telerik.com/help/silverlight/gridview-template-selectors-overview.html\r\n\r\n[//]:","KeyWords":"RowDetailsTemplateSelector,  datatemplateselector"},
{"Name":"RowDetailsVisibilityOptions","ExampleInfo":{"Name":"RowDetailsVisibilityOptions","DirectoryName":"RowDetailsVisibilityOptions","ExampleFileNames":["RowDetailsVisibilityOptions_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","ComboBoxSelectedItemToRowDetailsVisibilityModeConverter.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Player.cs","Position.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/RowDetailsVisibilityOptions/","Description":"Expand / Collapse Row Details\r\nThis example demonstrates how to expand / collapse the RowDetails of the GridView by setting the RowDetailsVisibilityMode property or using the GridViewRowDetailsToggleColumn. \r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://www.telerik.com/help/wpf/radgridview-row-details-visibility.html   \r\nFor SL - http://www.telerik.com/help/silverlight/radgridview-row-details-visibility.html\r\n\r\n[//]:","KeyWords":"RowDetailsVisibilityOptions,  rowdetailsvisibilitymode, gridviewrowdetailstogglecolumn"},
{"Name":"RowStyleSelector","ExampleInfo":{"Name":"RowStyleSelector","DirectoryName":"RowStyleSelector","ExampleFileNames":["CustomRowStyleSelector_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md","StadiumCapacityStyle.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/RowStyleSelector/","Description":"Row Style Selector\r\nThis example demonstrates how to style conditionally RadGridView rows using a RowStyleSelector.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/style-selectors/rowstyleselector.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/style-selectors/rowstyleselector.html\r\n\r\n[//]:","KeyWords":"RowStyleSelector,  condition"},
{"Name":"ScrollIntoViewAsyncMvvm","ExampleInfo":{"Name":"ScrollIntoViewAsyncMvvm","DirectoryName":"ScrollIntoViewAsyncMvvm","ExampleFileNames":["ScrollIntoViewAsyncMvvm_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyScrollIntoViewAsyncBehavior.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ScrollIntoViewAsyncMvvm/","Description":"Scroll New Item Into View\r\nThis example demonstrates how to create an attached behavior, that allows you to scroll to the newly added item. \r\nIn order to do that ScrollIntoViewAsync method is invoked.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://www.telerik.com/help/wpf/gridview-scroll-item.html\r\nFor SL - http://www.telerik.com/help/silverlight/gridview-scroll-item.html\r\n\r\n[//]:","KeyWords":"ScrollIntoViewAsyncMvvm,  asynchronous, attached, behavior, new, add, item"},
{"Name":"ScrollTwoGridsSimultaneously","ExampleInfo":{"Name":"ScrollTwoGridsSimultaneously","DirectoryName":"ScrollTwoGridsSimultaneously","ExampleFileNames":["ScrollTwoGridsSimultaneously_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ScrollTwoGridsSimultaneously/","Description":"Scroll Two RadGridViews Simultaneously\r\nThis example demonstrates how to synchronize the scrolling of two separate RadGridViews.\r\n\r\n[//]:","KeyWords":"ScrollTwoGridsSimultaneously,  synchronize"},
{"Name":"SelectSingleItemHierarchy","ExampleInfo":{"Name":"SelectSingleItemHierarchy","DirectoryName":"SelectSingleItemHierarchy","ExampleFileNames":["SelectSingleItemHierarchy_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Player.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/SelectSingleItemHierarchy/","Description":" Select Single Item in Hierarchy\r\nThis example demonstrates how to select a single item in a hierarchical RadGridView.","KeyWords":"SelectSingleItemHierarchy"},
{"Name":"SortDirectionTooltip","ExampleInfo":{"Name":"SortDirectionTooltip","DirectoryName":"SortDirectionTooltip","ExampleFileNames":["SortDirectionTooltip_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/SortDirectionTooltip/","Description":"Tooltip Showing Column's SortDirection\r\nThis example demonstrates how to add a Tooltip for GridViewDataColumn's header which shows its SortDirection.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/sorting/programmatic.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/sorting/programmatic.html\r\n\r\n[//]:","KeyWords":"SortDirectionTooltip,  gridviewdatacolumn, header"},
{"Name":"SortDistinctValues","ExampleInfo":{"Name":"SortDistinctValues","DirectoryName":"SortDistinctValues","ExampleFileNames":["SortDistinctValues_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","CountryConverter.cs","MainPage.xaml","MainPage.xaml.cs","MyColumn.cs","MyViewModel.cs","Player.cs","Position.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/SortDistinctValues/","Description":"Sort Distinct Values\r\nThis example demonstrates how to sort the distinct values when an IValueConverter to the DataMemberBinding is applied.\r\n\r\n[//]:","KeyWords":"SortDistinctValues,  distinctvalues, filter, sort"},
{"Name":"SortGroupByAggregate","ExampleInfo":{"Name":"SortGroupByAggregate","DirectoryName":"SortGroupByAggregate","ExampleFileNames":["SortGroupByAggregate_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","SortingGroupDescriptor.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/SortGroupByAggregate/","Description":"Sort Group By Aggregate\nThis example demonstrates how to sort groups by defined aggregate functions. \r\nYou can press the two buttons below RadGridView to test different cases:\r\n -Sort by first aggregate\r\n -Sort by second aggregate\r\n \r\nNote: This example has lightweight templates applied for RadGridView.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/features/overview-lightweight-template.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/features/overview-lightweight-template.html\r\n\r\n[//]:","KeyWords":"SortGroupByAggregate,  function, lightweight, templates"},
{"Name":"SortGroupByDifferentProperty","ExampleInfo":{"Name":"SortGroupByDifferentProperty","DirectoryName":"SortGroupByDifferentProperty","ExampleFileNames":["SortGroupByDifferentProperty_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/SortGroupByDifferentProperty/","Description":"Sort Group By Different Property\nThis example demonstrates how to sort groups by a property different from the one on which RadGridView has been grouped. It handles RadGridView's Grouping event and creates a custom GroupDescriptor. \r\n\r\nNote: This example has lightweight templates applied for RadGridView.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/features/overview-lightweight-template.html\r\nFor SL - http://docs.telerik.com/devtools/wpf/controls/radgridview/features/overview-lightweight-template.html\r\n\r\n[//]:","KeyWords":"SortGroupByDifferentProperty,  groupdescriptor"},
{"Name":"ValidationIDataErrorInfo","ExampleInfo":{"Name":"ValidationIDataErrorInfo","DirectoryName":"ValidationIDataErrorInfo","ExampleFileNames":["ValidationIDataErrorInfo_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ValidationIDataErrorInfo/","Description":" Validation with IDataErrorInfo Interface\r\nThis example demonstrates how to perform validation with the IDataErrorInfo Interface.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/features/managing-data-validation.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/features/managing-data-validation.html","KeyWords":"ValidationIDataErrorInfo"},
{"Name":"ValidationINotifyDataErrorInfo","ExampleInfo":{"Name":"ValidationINotifyDataErrorInfo","DirectoryName":"ValidationINotifyDataErrorInfo","ExampleFileNames":["ValidationINotifyDataErrorInfo_SL.csproj","App_SL.xaml","App_SL.xaml.cs","Club.cs","MainPage.xaml","MainPage.xaml.cs","MyViewModel.cs","Readme.md","ViewModelBase.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/GridView/ValidationINotifyDataErrorInfo/","Description":"Validation With INotifyDataErrorInfo Interface\r\nThis example demonstrates how to perform standard and dynamic validation with the INotifyDataErrorInfo Interface.\r\n\r\nMore details can be found in our online help:\r\nFor WPF - http://docs.telerik.com/devtools/wpf/controls/radgridview/features/managing-data-validation.html\r\nFor SL - http://docs.telerik.com/devtools/silverlight/controls/radgridview/features/managing-data-validation.html\r\n\r\n[//]:","KeyWords":"ValidationINotifyDataErrorInfo,  dynamic"}]