[{"Name":"Custom Keyboard Command Provider","ExampleInfo":{"Name":"Custom Keyboard Command Provider","ProjectPath":"C:\\SDK-details-repository\\DataForm\\CustomKeyboardCommandProvider\\CustomKeyboardCommandProvider_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\DataForm\\CustomKeyboardCommandProvider\\Readme.md","DirectoryName":"CustomKeyboardCommandProvider","ExampleFileNames":["CustomKeyboardCommandProvider_WPF.csproj","App.xaml","App.xaml.cs","Employee.cs","KeyboardCommandProvider.cs","MainWindow.xaml","MainWindow.xaml.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/DataForm/CustomKeyboardCommandProvider/","Description":"\r\nRadDataForm provides an easy MVVM-friendly approach for customization of its default commands' logic. This example demonstrates how to extend the way RadDataForm handles a particular key.","KeyWords":"Custom Keyboard Command Provider"},
{"Name":"Data Template Selector","ExampleInfo":{"Name":"Data Template Selector","ProjectPath":"C:\\SDK-details-repository\\DataForm\\DataTemplateSelector\\DataTemplateSelector_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\DataForm\\DataTemplateSelector\\Readme.md","DirectoryName":"DataTemplateSelector","ExampleFileNames":["DataTemplateSelector_WPF.csproj","App.xaml","App.xaml.cs","Employee.cs","EmployeesEditTemplateSelector.cs","MainWindow.xaml","MainWindow.xaml.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/DataForm/DataTemplateSelector/","Description":"\nThis example demonstrates how to conditionally load different ReadOnly/Edit DataTemplates, according to RadDataForm's CurrentItem.","KeyWords":"Data Template Selector"},
{"Name":"Defining Custom DataFields","ExampleInfo":{"Name":"Defining Custom DataFields","ProjectPath":"C:\\SDK-details-repository\\DataForm\\DefiningCustomDataFields\\DefiningCustomDataFields_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\DataForm\\DefiningCustomDataFields\\Readme.md","DirectoryName":"DefiningCustomDataFields","ExampleFileNames":["DefiningCustomDataFields_WPF.csproj","App.xaml","App.xaml.cs","DataFormNumericUpDownField.cs","Employee.cs","MainWindow.xaml","MainWindow.xaml.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/DataForm/DefiningCustomDataFields/","Description":"\r\nThe sample demonstrates how to define your own DataField type.","KeyWords":"Defining Custom DataFields"},
{"Name":"Integrate With RadGridView","ExampleInfo":{"Name":"Integrate With RadGridView","ProjectPath":"C:\\SDK-details-repository\\DataForm\\IntegrateWithRadGridView\\IntegrateWithRadGridView_WPF.csproj","ReadmePath":"C:\\SDK-details-repository\\DataForm\\IntegrateWithRadGridView\\Readme.md","DirectoryName":"IntegrateWithRadGridView","ExampleFileNames":["IntegrateWithRadGridView_WPF.csproj","App.xaml","App.xaml.cs","Employee.cs","MainWindow.xaml","MainWindow.xaml.cs"]},"GitHubPath":"https://raw.githubusercontent.com/telerik/xaml-sdk/master/DataForm/IntegrateWithRadGridView/","Description":"\r\nThe sample demonstrates how you can integrate RadDataForm with RadGridView.","KeyWords":"Integrate With RadGridView"}]