[{"Name":"Contextual Groups - Data Binding","ExampleInfo":{"Name":"Contextual Groups - Data Binding","DirectoryName":"ContextualGroups-DataBinding","ExampleFileNames":["ContextualGroups-DataBinding_WPF.csproj","App.config","App.xaml","App.xaml.cs","ContextualGroupViewModel.cs","MainViewModel.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md","TabViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/RibbonView/ContextualGroups-DataBinding/","Description":"The sample demonstrates how to use the RadRibbonView with data-bound ContextualGroups.\r\n\r\nSILVERLIGHT NOTE\r\nPlease note that due to limitations in SL we need to set the ContextualTabsStyle property of the RadRibbonView. That style template is different than the default one for the RadRibbonTabs, that is why we need to change its template if we use xaml binaries. However if we use NoXAML binaries you can BasedOn the style to the \"ContextualTabsStyle\".","KeyWords":"Contextual Groups - Data Binding,  contextualgroups, contextualgroupname, radribbontabs, databinding, mvvm"},
{"Name":"Help Functionality","ExampleInfo":{"Name":"Help Functionality","DirectoryName":"HelpFunctionality","ExampleFileNames":["HelpFunctionality_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","MyHelpWindow.xaml","MyHelpWindow.xaml.cs","RibbonViewContainer.xaml","RibbonViewContainer.xaml.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/RibbonView/HelpFunctionality/","Description":"This example demonstrates an implementation where an popup window with help content is opened when the F1 key is pressed.","KeyWords":"Help Functionality,  helpfunctionality, keyboardsupport, hotkey, popupwindow,  helpcontent, keyboardf1, command"},
{"Name":"Multiple Access Keys - Key Tips","ExampleInfo":{"Name":"Multiple Access Keys - Key Tips","DirectoryName":"MultipleAccessKeys-KeyTips","ExampleFileNames":["MultipleAccessKeys-KeyTips_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/RibbonView/MultipleAccessKeys-KeyTips/","Description":"The sample demonstrates how to set multiple AccessKeys for the KeyTips of the RadRibbonView by setting attached property of the KeyTipService AccessKeys.","KeyWords":"Multiple Access Keys - Key Tips,  multipleaccesskeys, keytipservice, accesstext, iskeytipsenabled"},
{"Name":"MultiSelection in RadRibbonGallery","ExampleInfo":{"Name":"MultiSelection in RadRibbonGallery","DirectoryName":"MultiSelectionRibbonGallery","ExampleFileNames":["MultiSelectionRibbonGallery_WPF.csproj","App.xaml","App.xaml.cs","CustomRibbonGallery.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/RibbonView/MultiSelectionRibbonGallery/","Description":"This example demonstrates how to implement multiple selection in the RibbonGallery control.","KeyWords":"MultiSelection in RadRibbonGallery,  selectionmode, gallery, closedropdownonselection"},
{"Name":"Office2016 Inspired RibbonView","ExampleInfo":{"Name":"Office2016 Inspired RibbonView","DirectoryName":"Office2016InspiredRibbonView_WPF","ExampleFileNames":["Office2016InspiredRibbonView_WPF.csproj","App.config","App.xaml","App.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Appearance\\AppearanceChangedEventArgs.cs","Appearance\\AppearanceCommandParameter.cs","Appearance\\AppearanceManager.cs","Appearance\\ColorToSolidColorBrushConverter.cs","Appearance\\Office2016ColorVariations.cs","Appearance\\Office2016Palette.cs","Appearance\\Office2016RsourceExtension.cs","Appearance\\Resources.cs","Styles\\ApplicationStyles.xaml","Styles\\BackstageStyles.xaml","Styles\\QuickAccessToolbarStyles.xaml","Styles\\RibbonButtonsStyles.xaml","Styles\\RibbonViewStyles.xaml","Styles\\RibbonWindowStyles.xaml","ViewModel\\MainViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/RibbonView/Office2016InspiredRibbonView_WPF/","Description":"This example demonstrates an Office2016 Inspired RibbonView and RibbonWindow based on our VisualStudio2013 theme.\r\n\r\nThe approach used in this example is now outdated. The [Office2016](https://docs.telerik.com/devtools/wpf/styling-and-appearance/themes-suite/common-styling-appearance-office2016-theme) theme can be applied instead.","KeyWords":"Office2016 Inspired RibbonView,  office2016, themes, windows10"}]