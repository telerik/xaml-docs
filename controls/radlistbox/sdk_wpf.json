[{"Name":"CustomDragVisualStyle","ExampleInfo":{"Name":"CustomDragVisualStyle","DirectoryName":"CustomDragVisualStyle","ExampleFileNames":["CustomDragVisualStyle_WPF.csproj","App.xaml","App.xaml.cs","Country.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md","ViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/CustomDragVisualStyle/","Description":"Custom Drag Visual Style\nThis example demonstrates how to create a custom DragVisualProvider in order to change its Foreground, Background, BorderBrush and Template for\r\nSilverlight and WPF.\r\n\r\n[//]:","KeyWords":"CustomDragVisualStyle,  Reorder, Drop, Customize, DragVisualProvider"},
{"Name":"CustomDropCueWithWrapPanel","ExampleInfo":{"Name":"CustomDropCueWithWrapPanel","DirectoryName":"CustomDropCueWithWrapPanel","ExampleFileNames":["CustomDropCueWithWrapPanel_WPF.csproj","App.xaml","App.xaml.cs","CustomLinearDropVisualProvider.cs","Item.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md","ViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/CustomDropCueWithWrapPanel/","Description":"Custom Drop Cue With Wrap Panel\nThis example demonstrates how to customize the LinearDropVisualProvider of RadListBox. In the example you can notice that when dragging an item in the ListBox the DropVisual is different.\n\n[//]:","KeyWords":"CustomDropCueWithWrapPanel,  LinearDropVisualProvider, Drag, DropVisual"},
{"Name":"CustomListBoxDragDropBehavior","ExampleInfo":{"Name":"CustomListBoxDragDropBehavior","DirectoryName":"CustomListBoxDragDropBehavior","ExampleFileNames":["CustomListBoxDragDropBehavior_WPF.csproj","App.xaml","App.xaml.cs","Customer.cs","CustomerViewModel.cs","MainWindow.xaml","MainWindow.xaml.cs","MyListBoxDragDropBehavior.cs","Readme.md"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/CustomListBoxDragDropBehavior/","Description":" Custom List Box Drag Drop Behavior\nThis example demonstrates how to customize ListBoxDragDropBehavior of RadListBox. In the example the right ListBox control has the custom MyListBoxDragDropBehavior and when items are dragged/dropped from/in it an Alert massage is shown with the items details.","KeyWords":"CustomListBoxDragDropBehavior"},
{"Name":"DifferentlyColoredUnfocusedSelectedItems","ExampleInfo":{"Name":"DifferentlyColoredUnfocusedSelectedItems","DirectoryName":"DifferentlyColoredUnfocusedSelectedItems","ExampleFileNames":["DifferentlyColoredUnfocusedSelectedItems_WPF.csproj","App.config","App.xaml","App.xaml.cs","BoolToColorConverter.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md","ViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/DifferentlyColoredUnfocusedSelectedItems/","Description":" Differently Colored Unfocused SelectedItems\r\nThis sample project demonstates how to change the background color of RadListBoxItems when RadListBox loses the focus.","KeyWords":"DifferentlyColoredUnfocusedSelectedItems"},
{"Name":"DragDropDataConversion","ExampleInfo":{"Name":"DragDropDataConversion","DirectoryName":"DragDropDataConversion","ExampleFileNames":["DragDropDataConversion_WPF.csproj","App.xaml","App.xaml.cs","Customer.cs","CustomerToProjectConverter.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Project.cs","ProjectToCustomerConverter.cs","Readme.md","ViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/DragDropDataConversion/","Description":" Data conversion between two RadListBox controls\r\nThis example demonstrates how to convert data when using drag and drop between two RadListBox controls. The left RadListBox control is bound to a collection of Customer object and the right one is bound to a collection of Project objects. The conversion is handled by two custom DataConverters.","KeyWords":"DragDropDataConversion"},
{"Name":"DragDropWithScheduleView","ExampleInfo":{"Name":"DragDropWithScheduleView","DirectoryName":"DragDropWithScheduleView","ExampleFileNames":["DragDropWithScheduleView_WPF.csproj","App.xaml","App.xaml.cs","AppointmentToCustomerConverter.cs","Customer.cs","CustomScheduleViewDragDropBehavior.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md","ViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/DragDropWithScheduleView/","Description":"Drag and drop with ScheduleView\r\nThis example demonstrates how to achieve drag and drop functionality between RadListBox and RadScheduleView by creating AppointmentToCustomerConverter and CustomScheduleViewDragDropBehavior\r\nfor Silverlight and WPF.\r\n\r\n[//]:","KeyWords":"DragDropWithScheduleView,  Custom, RadScheduleView, DragDropBehavior, Behavior"},
{"Name":"ModifyListBoxDragVisualStyle","ExampleInfo":{"Name":"ModifyListBoxDragVisualStyle","DirectoryName":"ModifyListBoxDragVisualStyle","ExampleFileNames":["ModifyListBoxDragVisualStyle_WPF.csproj","App.xaml","App.xaml.cs","Country.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md","ViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/ModifyListBoxDragVisualStyle/","Description":"Modified ListBoxDragVisualStyle\r\nThis example demonstrates how to create a modified ListBoxDragVisualStyle in order to remove the before and after specifiers for Silverlight and WPF.\r\n\r\n[//]:","KeyWords":"ModifyListBoxDragVisualStyle,  Custom, DragDrop"},
{"Name":"SelectedItems","ExampleInfo":{"Name":"SelectedItems","DirectoryName":"SelectedItems","ExampleFileNames":["SelectedItems_WPF.csproj","App.xaml","App.xaml.cs","Country.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","MyViewModel.cs","Readme.md","SelectedItemsHelper.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/SelectedItems/","Description":"Create attached property for SelectedItems\r\nIMPORTANT:\r\n\r\nWith the release of Telerik UI for WPF Q1 2015 there is a new functionality for achieving MVVM scenarios where the SelectedItems of the RadListBox should be bound to a collection from the view model. More details can be found in our online documentation: \r\n- For WPF here: http://docs.telerik.com/devtools/wpf/controls/radlistbox/features/selecteditemssource\r\n- For Silverlight here: http://docs.telerik.com/devtools/silverlight/controls/radlistbox/features/selecteditemssource\r\n\r\nThis example demonstrates how to create an attached property that could be used in order to bind a collection of objects to the control \r\nand use it as a collection of selected items for Silverlight and WPF.\r\n\r\n[//]:","KeyWords":"SelectedItems,  MVVM"},
{"Name":"SelectedItemsSource","ExampleInfo":{"Name":"SelectedItemsSource","DirectoryName":"SelectedItemsSource","ExampleFileNames":["SelectedItemsSource_WPF.csproj","App.xaml","App.xaml.cs","Example.xaml","Example.xaml.cs","Item.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md","SDK icon.ico","ViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/SelectedItemsSource/","Description":"How to bind SelectedItems in MVVM\r\nThis example demonstrates how to use the built-in ListBoxSelectedItemsBehavior of the RadListBox control in order to bind a collection of objects which will be two way synced with the control's SelectedItems collection.\r\n\r\n[//]:","KeyWords":"SelectedItemsSource,  ListBoxSelectedItemsBehavior"},
{"Name":"ShuttleControl","ExampleInfo":{"Name":"ShuttleControl","DirectoryName":"ShuttleControl","ExampleFileNames":["ShuttleControl_WPF.csproj","Agency.cs","App.xaml","App.xaml.cs","Example.xaml","Example.xaml.cs","MainWindow.xaml","MainWindow.xaml.cs","Readme.md","ViewModel.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/ListBox/ShuttleControl/","Description":"Shuttle Control\r\n\r\nThis example demonstrates how you can combine two RadListBox controls to implement a shuttle control. You can easily move/remove one or multiple select items from one to the other ListBox.\r\n\r\n[//]:","KeyWords":"ShuttleControl,  shuttlecontrol, databinding, mvvm"}]