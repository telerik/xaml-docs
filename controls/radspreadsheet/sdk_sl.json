[{"Name":"Custom ContextMenu","ExampleInfo":{"Name":"Custom ContextMenu","DirectoryName":"CustomContextMenu","ExampleFileNames":["CustomContextMenu_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","SelectionDependentCommand.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Spreadsheet/SL/CustomContextMenu/","Description":"This example demonstrates how to customize the context menu of the worksheet editor and add a custom command that highlights the selected cells. You can find more details on the scenario in the following blog post: http://blogs.telerik.com/xamlteam/posts/14-04-14/radspreadsheet-tips-and-tricks-customize-the-context-menu-like-a-pro.","KeyWords":"Custom ContextMenu,  replace, inherit, modify,command,highlight"},
{"Name":"Custom Functions","ExampleInfo":{"Name":"Custom Functions","DirectoryName":"CustomFunctions","ExampleFileNames":["CustomFunctions_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","Functions\\Add.cs","Functions\\Arguments.cs","Functions\\E.cs","Functions\\GeoMean.cs","Functions\\Indirect.cs","Functions\\Nand.cs","Functions\\RepeatString.cs","Functions\\Upper.cs","Resources\\ResourceHelper.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Spreadsheet/SL/CustomFunctions/","Description":"This examples shows how to create and register custom functions in RadSpreadsheet.\r\nThe example shows several functions inheriting from different members from RadSpreadsheet functions inheritance tree.\r\n - Arguments and E functions are inheriting from FunctionBase abstract class.\r\n - RepeatString function is inheriting from FunctionWithArguments abstract class.\r\n - Indirect function is inheriting from FunctionWithArguments abstract class and is overriding the definition of the default RadSpreadsheet \"INDIRECT\" function. It also demonstrates the usage of CellReferenceRangeExpression.\r\n - Add and GeoMean functions are inheriting from NumbersInFunction abstract class and are using their own ArgumentConversionRules.\r\n - Nand function is inheriting from BooleansInFunction abstract class.\r\n - Upper function is inheriting from StringsInFunction abstract class and is overriding the definition of the default RadSpreadsheet \"UPPER\" function.\r\n \r\nYou should additionally notice that all this function classes are registered through the FunctionManager class, so that they can be used in RadSpreadsheet.","KeyWords":"Custom Functions,  cell,reference,range,expression,add,geomean,nand,upper,indirect"},
{"Name":"Custom Row And Column Headings","ExampleInfo":{"Name":"Custom Row And Column Headings","DirectoryName":"CustomRowAndColumnHeadings","ExampleFileNames":["CustomRowAndColumnHeadings_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs","HeaderConverters\\DynamicHeaderNameRenderincConverter.cs","HeaderConverters\\NumberedColumnsHeaderNameRenderingConverter.cs","Resources\\ResourceHelper.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Spreadsheet/SL/CustomRowAndColumnHeadings/","Description":"This examples shows how to change the row and column headers or hide them in RadSpreadsheet.\r\nThe example shows two different custom header name rendering converters:\r\n - NumberedColumnsHeaderNameRenderingConverter which makes all column headers to be numbers (1, 2, 3,...) instead of letters (A, B, C,...)\r\n - DynamicHeaderNameRenderingConverter which makes row and column headers that intersect with the table data on scroling to contain the data\r\n   from the first row and first column of the table.","KeyWords":"Custom Row And Column Headings,  dynamicheadernamerenderingconverter,numberedcolumnsheadernamerenderingconverter"},
{"Name":"First Look","ExampleInfo":{"Name":"First Look","DirectoryName":"FirstLook","ExampleFileNames":["FirstLook_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Spreadsheet/SL/FirstLook/","Description":"This example shows how a RadSpreadsheet component can be integrated with RadRibbonView in order to achieve Microsoft Excel-like look.","KeyWords":"First Look,  integrated,integration,radribbonview,excel,look,desig"},
{"Name":"Localization","ExampleInfo":{"Name":"Localization","DirectoryName":"Localization","ExampleFileNames":["Localization_SL.csproj","App_SL.xaml","App_SL.xaml.cs","CustomLocalizationManager.cs","MainPage.xaml","MainPage.xaml.cs","RadSpreadsheetResources.de.resx","RadSpreadsheetResources.Designer.cs","RadSpreadsheetResources.resx"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Spreadsheet/SL/Localization/","Description":"This example shows how the RadSpreadsheet can be localized.","KeyWords":"Localization,  language"},
{"Name":"RadToolBar UI","ExampleInfo":{"Name":"RadToolBar UI","DirectoryName":"RadToolBarUI","ExampleFileNames":["RadToolBarUI_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Spreadsheet/SL/RadToolBarUI/","Description":"This example shows how to bind RadSpreadsheet to RadToolBar. The ToolBar contains buttons that allow the user to open, save and create files and to cut, copy and paste the contents of the worksheet.  You can find more details on the scenario in the following blog post: http://blogs.telerik.com/xamlteam/posts/14-03-21/radspreadsheet-tips-and-tricks-radtoolbar-in-radspreadsheet-no-problemo.","KeyWords":"RadToolBar UI,  simple, open, save"},
{"Name":"Worksheet editor ContextMenu","ExampleInfo":{"Name":"Worksheet editor ContextMenu","DirectoryName":"WorksheetEditorContextMenu","ExampleFileNames":["WorksheetEditorContextMenu_SL.csproj","App_SL.xaml","App_SL.xaml.cs","MainPage.xaml","MainPage.xaml.cs"]},"GitHubPath":"https://api.github.com/repos/telerik/xaml-sdk/contents/Spreadsheet/SL/WorksheetEditorContextMenu/","Description":"This examples sets up a simple menu with several commands: cut, copy, paste, clear contents. Also the menu has two items allow the user to insert and delete cells respectively.","KeyWords":"Worksheet editor ContextMenu,  replace, inherit, modify,cut,copy,paste,clearcontent,insert,delete"}]